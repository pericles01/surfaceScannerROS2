[0.000000] (-) TimerEvent: {}
[0.000339] (interfaces) JobQueued: {'identifier': 'interfaces', 'dependencies': OrderedDict()}
[0.000722] (SurfaceScanner) JobQueued: {'identifier': 'SurfaceScanner', 'dependencies': OrderedDict([('interfaces', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces')])}
[0.001138] (interfaces) JobStarted: {'identifier': 'interfaces'}
[0.008568] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'cmake'}
[0.009646] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'build'}
[0.009681] (interfaces) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', '--', '-j8', '-l8'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.045331] (interfaces) StdoutLine: {'line': b'[  2%] Built target interfaces__cpp\n'}
[0.046077] (interfaces) StdoutLine: {'line': b'[ 12%] Built target interfaces__rosidl_generator_c\n'}
[0.056391] (interfaces) StdoutLine: {'line': b'[ 12%] Built target ament_cmake_python_copy_interfaces\n'}
[0.069938] (interfaces) StdoutLine: {'line': b'[ 23%] Built target interfaces__rosidl_typesupport_introspection_c\n'}
[0.071101] (interfaces) StdoutLine: {'line': b'[ 34%] Built target interfaces__rosidl_typesupport_c\n'}
[0.071836] (interfaces) StdoutLine: {'line': b'[ 44%] Built target interfaces__rosidl_typesupport_cpp\n'}
[0.074684] (interfaces) StdoutLine: {'line': b'[ 61%] Built target interfaces__rosidl_typesupport_fastrtps_cpp\n'}
[0.074896] (interfaces) StdoutLine: {'line': b'[ 65%] Built target interfaces__rosidl_typesupport_fastrtps_c\n'}
[0.079824] (interfaces) StdoutLine: {'line': b'[ 76%] Built target interfaces__rosidl_typesupport_introspection_cpp\n'}
[0.093099] (interfaces) StdoutLine: {'line': b'[ 76%] Built target interfaces\n'}
[0.099895] (-) TimerEvent: {}
[0.107245] (interfaces) StdoutLine: {'line': b'[ 78%] Built target interfaces__py\n'}
[0.123209] (interfaces) StdoutLine: {'line': b'[ 87%] Built target interfaces__rosidl_generator_py\n'}
[0.140057] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_fastrtps_c__pyext\n'}
[0.140262] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_introspection_c__pyext\n'}
[0.140423] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_c__pyext\n'}
[0.200019] (-) TimerEvent: {}
[0.300327] (-) TimerEvent: {}
[0.400580] (-) TimerEvent: {}
[0.402995] (interfaces) StdoutLine: {'line': b'running egg_info\n'}
[0.420092] (interfaces) StdoutLine: {'line': b'writing interfaces.egg-info/PKG-INFO\n'}
[0.420320] (interfaces) StdoutLine: {'line': b'writing dependency_links to interfaces.egg-info/dependency_links.txt\n'}
[0.420544] (interfaces) StdoutLine: {'line': b'writing top-level names to interfaces.egg-info/top_level.txt\n'}
[0.483924] (interfaces) StdoutLine: {'line': b"reading manifest file 'interfaces.egg-info/SOURCES.txt'\n"}
[0.484691] (interfaces) StdoutLine: {'line': b"writing manifest file 'interfaces.egg-info/SOURCES.txt'\n"}
[0.500709] (-) TimerEvent: {}
[0.534612] (interfaces) StdoutLine: {'line': b'[100%] Built target ament_cmake_python_build_interfaces_egg\n'}
[0.544356] (interfaces) CommandEnded: {'returncode': 0}
[0.598630] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'install'}
[0.600833] (-) TimerEvent: {}
[0.605102] (interfaces) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.611358] (interfaces) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.611616] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/rosidl_interfaces/interfaces\n'}
[0.611813] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.611990] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.612168] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.612313] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__functions.h\n'}
[0.612427] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.h\n'}
[0.612535] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__functions.c\n'}
[0.612661] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__struct.h\n'}
[0.612773] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/calibrate_laser_import.h\n'}
[0.612955] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.613119] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/image_pair.h\n'}
[0.613230] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_generator_c__visibility_control.h\n'}
[0.613374] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.613487] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__functions.c\n'}
[0.613637] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__struct.h\n'}
[0.613814] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__struct.h\n'}
[0.613964] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__functions.h\n'}
[0.614065] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__functions.h\n'}
[0.614189] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.h\n'}
[0.614308] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__functions.c\n'}
[0.614407] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.h\n'}
[0.614523] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/camera_calibration_imgs.h\n'}
[0.614644] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/library_path.sh\n'}
[0.614819] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/library_path.dsv\n'}
[0.614978] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_generator_c.so\n'}
[0.615155] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.615312] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.615472] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.615630] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_fastrtps_c.h\n'}
[0.615773] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.615892] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_fastrtps_c__visibility_control.h\n'}
[0.616001] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.616169] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_fastrtps_c.h\n'}
[0.616375] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_fastrtps_c.h\n'}
[0.616520] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_fastrtps_c.so\n'}
[0.616627] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.616769] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.616882] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.617000] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.c\n'}
[0.617135] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_introspection_c.h\n'}
[0.617277] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.617442] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_introspection_c__visibility_control.h\n'}
[0.617557] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.617693] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.c\n'}
[0.617837] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.c\n'}
[0.617963] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_introspection_c.h\n'}
[0.618068] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_introspection_c.h\n'}
[0.618247] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_introspection_c.so\n'}
[0.618441] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_c.so\n'}
[0.618631] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.618765] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.618865] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.618962] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__traits.hpp\n'}
[0.619058] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__builder.hpp\n'}
[0.619145] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__struct.hpp\n'}
[0.619209] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/calibrate_laser_import.hpp\n'}
[0.619270] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.619331] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/image_pair.hpp\n'}
[0.619391] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.619474] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__builder.hpp\n'}
[0.619538] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__struct.hpp\n'}
[0.619599] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__traits.hpp\n'}
[0.619660] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__builder.hpp\n'}
[0.619727] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__traits.hpp\n'}
[0.619799] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__struct.hpp\n'}
[0.619856] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/camera_calibration_imgs.hpp\n'}
[0.619913] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.619970] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.620141] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.620209] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/dds_fastrtps\n'}
[0.620267] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.620324] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.620380] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h\n'}
[0.620437] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.620505] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/dds_fastrtps\n'}
[0.620563] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.620620] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.620676] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_fastrtps_cpp.so\n'}
[0.620749] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.620818] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.620880] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.620941] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.cpp\n'}
[0.621003] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.621066] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.621128] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.621206] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.621272] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.621334] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.cpp\n'}
[0.621526] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.cpp\n'}
[0.621594] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_introspection_cpp.so\n'}
[0.621656] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_cpp.so\n'}
[0.621718] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/pythonpath.sh\n'}
[0.621790] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/pythonpath.dsv\n'}
[0.621847] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info\n'}
[0.621905] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/dependency_links.txt\n'}
[0.621964] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/PKG-INFO\n'}
[0.622022] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/SOURCES.txt\n'}
[0.622080] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/top_level.txt\n'}
[0.622145] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces\n'}
[0.622204] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_introspection_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.622272] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_fastrtps_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.622331] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv\n'}
[0.622389] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/__init__.py\n'}
[0.622446] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/_calibrate_laser_import_s.c\n'}
[0.622505] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/_calibrate_laser_import.py\n'}
[0.622563] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_c.c\n'}
[0.622621] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/libinterfaces__rosidl_generator_py.so\n'}
[0.622678] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.622737] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg\n'}
[0.622795] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_camera_calibration_imgs_s.c\n'}
[0.622852] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_camera_calibration_imgs.py\n'}
[0.622911] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/__init__.py\n'}
[0.622974] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_image_pair.py\n'}
[0.623032] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_image_pair_s.c\n'}
[0.623090] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/__init__.py\n'}
[0.623148] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_fastrtps_c.c\n'}
[0.623207] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_introspection_c.c\n'}
[0.649131] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces'...\n"}
[0.649303] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg'...\n"}
[0.649370] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv'...\n"}
[0.653845] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_fastrtps_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.654127] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_introspection_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.654393] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.654662] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_generator_py.so\n'}
[0.654837] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/CameraCalibrationImgs.idl\n'}
[0.655000] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/ImagePair.idl\n'}
[0.655187] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport.idl\n'}
[0.655333] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/CameraCalibrationImgs.msg\n'}
[0.655473] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/ImagePair.msg\n'}
[0.655628] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport.srv\n'}
[0.655774] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport_Request.msg\n'}
[0.655930] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport_Response.msg\n'}
[0.656048] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/package_run_dependencies/interfaces\n'}
[0.656176] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/parent_prefix_path/interfaces\n'}
[0.656292] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/ament_prefix_path.sh\n'}
[0.656452] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/ament_prefix_path.dsv\n'}
[0.656731] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/path.sh\n'}
[0.656815] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/path.dsv\n'}
[0.656943] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.bash\n'}
[0.657034] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.sh\n'}
[0.657099] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.zsh\n'}
[0.657166] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.dsv\n'}
[0.657230] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/package.dsv\n'}
[0.657296] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/packages/interfaces\n'}
[0.657358] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cExport.cmake\n'}
[0.657425] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cExport-noconfig.cmake\n'}
[0.657492] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cExport.cmake\n'}
[0.657579] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cExport-noconfig.cmake\n'}
[0.657648] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cExport.cmake\n'}
[0.657827] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cExport-noconfig.cmake\n'}
[0.657960] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cExport.cmake\n'}
[0.658030] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cExport-noconfig.cmake\n'}
[0.658099] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cppExport.cmake\n'}
[0.658181] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cppExport.cmake\n'}
[0.658250] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cppExport-noconfig.cmake\n'}
[0.658318] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cppExport.cmake\n'}
[0.658386] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cppExport-noconfig.cmake\n'}
[0.658454] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cppExport.cmake\n'}
[0.658527] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cppExport-noconfig.cmake\n'}
[0.658596] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_pyExport.cmake\n'}
[0.658664] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_pyExport-noconfig.cmake\n'}
[0.658732] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake-extras.cmake\n'}
[0.658804] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_dependencies-extras.cmake\n'}
[0.658865] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_include_directories-extras.cmake\n'}
[0.658922] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_libraries-extras.cmake\n'}
[0.658979] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_targets-extras.cmake\n'}
[0.659035] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake_export_typesupport_targets-extras.cmake\n'}
[0.659091] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake_export_typesupport_libraries-extras.cmake\n'}
[0.659147] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfacesConfig.cmake\n'}
[0.659203] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfacesConfig-version.cmake\n'}
[0.659259] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/package.xml\n'}
[0.659844] (interfaces) CommandEnded: {'returncode': 0}
[0.700923] (-) TimerEvent: {}
[0.745928] (interfaces) JobEnded: {'identifier': 'interfaces', 'rc': 0}
[0.748646] (SurfaceScanner) JobStarted: {'identifier': 'SurfaceScanner'}
[0.753471] (SurfaceScanner) JobProgress: {'identifier': 'SurfaceScanner', 'progress': 'cmake'}
[0.754397] (SurfaceScanner) JobProgress: {'identifier': 'SurfaceScanner', 'progress': 'build'}
[0.755250] (SurfaceScanner) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner', '--', '-j8', '-l8'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble')]), 'shell': False}
[0.775619] (SurfaceScanner) StdoutLine: {'line': b'-- Found ament_cmake: 1.3.4 (/opt/ros/humble/share/ament_cmake/cmake)\n'}
[0.801040] (-) TimerEvent: {}
[0.896345] (SurfaceScanner) StdoutLine: {'line': b'-- Found rclcpp: 16.0.4 (/opt/ros/humble/share/rclcpp/cmake)\n'}
[0.901138] (-) TimerEvent: {}
[0.920450] (SurfaceScanner) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.4 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[0.922791] (SurfaceScanner) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.4 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[0.928652] (SurfaceScanner) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.4 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[0.940423] (SurfaceScanner) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.956646] (SurfaceScanner) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.001252] (-) TimerEvent: {}
[1.014593] (SurfaceScanner) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[1.016114] (SurfaceScanner) StdoutLine: {'line': b'-- Found rmw_fastrtps_cpp: 6.2.2 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)\n'}
[1.101350] (-) TimerEvent: {}
[1.143757] (SurfaceScanner) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[1.201478] (-) TimerEvent: {}
[1.301779] (-) TimerEvent: {}
[1.340594] (SurfaceScanner) StdoutLine: {'line': b'-- Found std_srvs: 4.2.3 (/opt/ros/humble/share/std_srvs/cmake)\n'}
[1.355303] (SurfaceScanner) StdoutLine: {'line': b'-- Found sensor_msgs: 4.2.3 (/opt/ros/humble/share/sensor_msgs/cmake)\n'}
[1.401908] (-) TimerEvent: {}
[1.474975] (SurfaceScanner) StdoutLine: {'line': b'-- Found cv_bridge: 3.2.1 (/opt/ros/humble/share/cv_bridge/cmake)\n'}
[1.486999] (SurfaceScanner) StdoutLine: {'line': b'-- Found image_transport: 3.1.5 (/opt/ros/humble/share/image_transport/cmake)\n'}
[1.502018] (-) TimerEvent: {}
[1.520211] (SurfaceScanner) StdoutLine: {'line': b'-- Found pcl_conversions: 2.4.0 (/opt/ros/humble/share/pcl_conversions/cmake)\n'}
[1.602129] (-) TimerEvent: {}
[1.689217] (SurfaceScanner) StdoutLine: {'line': b'-- Found pcl_ros: 2.4.0 (/opt/ros/humble/share/pcl_ros/cmake)\n'}
[1.702238] (-) TimerEvent: {}
[1.802509] (-) TimerEvent: {}
[1.853767] (SurfaceScanner) StdoutLine: {'line': b'-- Found eigen3_cmake_module: 0.1.1 (/opt/ros/humble/share/eigen3_cmake_module/cmake)\n'}
[1.854950] (SurfaceScanner) StdoutLine: {'line': b'-- Ensuring Eigen3 include directory is part of orocos-kdl CMake target\n'}
[1.902621] (-) TimerEvent: {}
[2.002870] (-) TimerEvent: {}
[2.103122] (-) TimerEvent: {}
[2.203369] (-) TimerEvent: {}
[2.214746] (SurfaceScanner) StdoutLine: {'line': b'-- Eigen found (include: /usr/include/eigen3, version: 3.4.0)\n'}
[2.238116] (SurfaceScanner) StdoutLine: {'line': b'-- FLANN found (include: /usr/include, lib: /usr/lib/x86_64-linux-gnu/libflann_cpp.so)\n'}
[2.303490] (-) TimerEvent: {}
[2.403767] (-) TimerEvent: {}
[2.471910] (SurfaceScanner) StdoutLine: {'line': b'-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n'}
[2.477489] (SurfaceScanner) StdoutLine: {'line': b'-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n'}
[2.503890] (-) TimerEvent: {}
[2.601792] (SurfaceScanner) StdoutLine: {'line': b'-- Eigen found (include: /usr/include/eigen3, version: 3.4.0)\n'}
[2.603961] (-) TimerEvent: {}
[2.606703] (SurfaceScanner) StdoutLine: {'line': b'-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n'}
[2.611565] (SurfaceScanner) StdoutLine: {'line': b'-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n'}
[2.704106] (-) TimerEvent: {}
[2.725769] (SurfaceScanner) StdoutLine: {'line': b'-- Found Qhull version 8.0.2\n'}
[2.804187] (-) TimerEvent: {}
[2.869250] (SurfaceScanner) StdoutLine: {'line': b'-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n'}
[2.904276] (-) TimerEvent: {}
[3.003850] (SurfaceScanner) StdoutLine: {'line': b'-- Found interfaces: 0.0.0 (/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake)\n'}
[3.004337] (-) TimerEvent: {}
[3.104577] (-) TimerEvent: {}
[3.203470] (SurfaceScanner) StderrLine: {'line': b'WARNING: Package name "SurfaceScanner" does not follow the naming conventions. It should start with a lower case letter and only contain lower case letters, digits, underscores, and dashes.\n'}
[3.204668] (-) TimerEvent: {}
[3.219349] (SurfaceScanner) StdoutLine: {'line': b'-- Configuring done\n'}
[3.246462] (SurfaceScanner) StderrLine: {'line': b'\x1b[33mCMake Warning at CMakeLists.txt:21 (add_executable):\n'}
[3.246676] (SurfaceScanner) StderrLine: {'line': b'  Cannot generate a safe runtime search path for target camera_node because\n'}
[3.246799] (SurfaceScanner) StderrLine: {'line': b'  files in some directories may conflict with libraries in implicit\n'}
[3.246904] (SurfaceScanner) StderrLine: {'line': b'  directories:\n'}
[3.247007] (SurfaceScanner) StderrLine: {'line': b'\n'}
[3.247109] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libpython3.10.so.1.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.247211] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.247311] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libtbb.so.12] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.247413] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.247525] (SurfaceScanner) StderrLine: {'line': b'\n'}
[3.247627] (SurfaceScanner) StderrLine: {'line': b'  Some of these libraries may not be found correctly.\n'}
[3.247728] (SurfaceScanner) StderrLine: {'line': b'\n'}
[3.247827] (SurfaceScanner) StderrLine: {'line': b'\x1b[0m\n'}
[3.303940] (SurfaceScanner) StderrLine: {'line': b'\x1b[33mCMake Warning at CMakeLists.txt:25 (add_executable):\n'}
[3.304091] (SurfaceScanner) StderrLine: {'line': b'  Cannot generate a safe runtime search path for target surface_scanner_node\n'}
[3.304158] (SurfaceScanner) StderrLine: {'line': b'  because files in some directories may conflict with libraries in implicit\n'}
[3.304216] (SurfaceScanner) StderrLine: {'line': b'  directories:\n'}
[3.304275] (SurfaceScanner) StderrLine: {'line': b'\n'}
[3.304332] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libpython3.10.so.1.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.304389] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.304446] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libpng16.so.16] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.304501] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.304556] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libz.so.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.304612] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.304664] (-) TimerEvent: {}
[3.304743] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libQt5OpenGL.so.5] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.304807] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.304862] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libQt5Widgets.so.5] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.304917] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.304972] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libQt5Gui.so.5] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.305035] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.305089] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libQt5Core.so.5] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.305149] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.305204] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libfreetype.so.6] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.305258] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.305312] (SurfaceScanner) StderrLine: {'line': b'    runtime library [libtbb.so.12] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\n'}
[3.305365] (SurfaceScanner) StderrLine: {'line': b'      /home/peri/anaconda3/lib\n'}
[3.305419] (SurfaceScanner) StderrLine: {'line': b'\n'}
[3.305472] (SurfaceScanner) StderrLine: {'line': b'  Some of these libraries may not be found correctly.\n'}
[3.305525] (SurfaceScanner) StderrLine: {'line': b'\n'}
[3.305577] (SurfaceScanner) StderrLine: {'line': b'\x1b[0m\n'}
[3.306914] (SurfaceScanner) StdoutLine: {'line': b'-- Generating done\n'}
[3.310927] (SurfaceScanner) StdoutLine: {'line': b'-- Build files have been written to: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner\n'}
[3.340925] (SurfaceScanner) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target camera_node\x1b[0m\n'}
[3.348501] (SurfaceScanner) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/surface_scanner_node.dir/src/SurfaceScannerNode.cpp.o\x1b[0m\n'}
[3.356606] (SurfaceScanner) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/camera_node.dir/src/camera_node.cpp.o\x1b[0m\n'}
[3.404791] (-) TimerEvent: {}
[3.505069] (-) TimerEvent: {}
[3.605348] (-) TimerEvent: {}
[3.705621] (-) TimerEvent: {}
[3.805956] (-) TimerEvent: {}
[3.906262] (-) TimerEvent: {}
[4.006552] (-) TimerEvent: {}
[4.106854] (-) TimerEvent: {}
[4.207181] (-) TimerEvent: {}
[4.307478] (-) TimerEvent: {}
[4.407764] (-) TimerEvent: {}
[4.508063] (-) TimerEvent: {}
[4.608339] (-) TimerEvent: {}
[4.708628] (-) TimerEvent: {}
[4.808913] (-) TimerEvent: {}
[4.811329] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:48:62:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcharacter constant too long for its type\n'}
[4.811510] (SurfaceScanner) StderrLine: {'line': b"   48 |     pcdPub = create_publisher<sensor_msgs::msg::PointCloud2>(\x1b[01;35m\x1b[K'surface_line'\x1b[m\x1b[K, 10);\n"}
[4.811608] (SurfaceScanner) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.811696] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:50:69:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcharacter constant too long for its type\n'}
[4.811784] (SurfaceScanner) StderrLine: {'line': b"   50 |     laserPlanePub = create_publisher<sensor_msgs::msg::PointCloud2>(\x1b[01;35m\x1b[K'laser_plane'\x1b[m\x1b[K, 10);\n"}
[4.811871] (SurfaceScanner) StderrLine: {'line': b'      |                                                                     \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.909042] (-) TimerEvent: {}
[5.009348] (-) TimerEvent: {}
[5.109643] (-) TimerEvent: {}
[5.209933] (-) TimerEvent: {}
[5.310238] (-) TimerEvent: {}
[5.410533] (-) TimerEvent: {}
[5.510846] (-) TimerEvent: {}
[5.611137] (-) TimerEvent: {}
[5.711432] (-) TimerEvent: {}
[5.811727] (-) TimerEvent: {}
[5.912031] (-) TimerEvent: {}
[5.986754] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.987042] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.987148] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_cam_calib_imgs\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.987318] (SurfaceScanner) StderrLine: {'line': b'   19 | ate_service<std_srvs::srv::Trigger>("send_cam_calib_imgs", &\x1b[01;31m\x1b[Ksend_cam_calib_imgs\x1b[m\x1b[K);\n'}
[5.987416] (SurfaceScanner) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.987517] (SurfaceScanner) StderrLine: {'line': b'\n'}
[5.987605] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:20:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_calib\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.987706] (SurfaceScanner) StderrLine: {'line': b'   20 | ate_service<std_srvs::srv::Trigger>("send_img_pair_calib", &\x1b[01;31m\x1b[Ksend_img_pair_calib\x1b[m\x1b[K);\n'}
[5.987793] (SurfaceScanner) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.987879] (SurfaceScanner) StderrLine: {'line': b'\n'}
[5.987963] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:21:98:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_surface\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.988070] (SurfaceScanner) StderrLine: {'line': b'   21 | e_service<std_srvs::srv::Trigger>("send_img_pair_surface", &\x1b[01;31m\x1b[Ksend_img_pair_surface\x1b[m\x1b[K);\n'}
[5.988158] (SurfaceScanner) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.988243] (SurfaceScanner) StderrLine: {'line': b'\n'}
[5.988328] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:22:88:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::start_img_stream\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.988426] (SurfaceScanner) StderrLine: {'line': b'   22 | create_service<std_srvs::srv::Trigger>("start_img_stream", &\x1b[01;31m\x1b[Kstart_img_stream\x1b[m\x1b[K);\n'}
[5.988512] (SurfaceScanner) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.988603] (SurfaceScanner) StderrLine: {'line': b'\n'}
[5.988688] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:23:86:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_calib\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.988778] (SurfaceScanner) StderrLine: {'line': b'   23 |  create_service<std_srvs::srv::Trigger>("stop_img_stream", &\x1b[01;31m\x1b[Ksend_img_pair_calib\x1b[m\x1b[K);\n'}
[5.988864] (SurfaceScanner) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.988948] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.012153] (-) TimerEvent: {}
[6.112455] (-) TimerEvent: {}
[6.212774] (-) TimerEvent: {}
[6.313113] (-) TimerEvent: {}
[6.346246] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_img_pair_calib(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.346475] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:39:93:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.346613] (SurfaceScanner) StderrLine: {'line': b'   39 | g_pair_calib(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[6.346734] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[6.346854] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.347149] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_img_pair_surface(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.347290] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:49:95:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.347433] (SurfaceScanner) StderrLine: {'line': b'   49 | pair_surface(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[6.347564] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[6.347683] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.355803] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_cam_calib_imgs(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.356053] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:59:93:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.356278] (SurfaceScanner) StderrLine: {'line': b'   59 | m_calib_imgs(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[6.356404] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[6.356531] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.356716] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::start_img_stream(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.356851] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:85:90:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.356991] (SurfaceScanner) StderrLine: {'line': b'   85 | t_img_stream(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[6.357110] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[6.357229] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.357348] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::stop_img_stream(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.357471] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:99:89:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.357595] (SurfaceScanner) StderrLine: {'line': b'   99 | p_img_stream(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[6.357713] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[6.357829] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.413236] (-) TimerEvent: {}
[6.513537] (-) TimerEvent: {}
[6.613829] (-) TimerEvent: {}
[6.714120] (-) TimerEvent: {}
[6.814447] (-) TimerEvent: {}
[6.880100] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:39\x1b[m\x1b[K,\n'}
[6.880403] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.880511] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.880617] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.880708] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.880797] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.880885] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.880973] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.881063] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.881158] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.881248] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.881337] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.881424] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.881572] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.881741] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.881845] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.881961] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.882066] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.882159] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.882258] (SurfaceScanner) StderrLine: {'line': b'   52 |     typename function_traits<decltype( \x1b[01;31m\x1b[K&FunctionT::operator()\x1b[m\x1b[K)>::arguments>::type;\n'}
[6.882424] (SurfaceScanner) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.882522] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.882704] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.882930] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.883275] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.883512] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.883612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.883781] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.883890] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.883978] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.884134] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.884310] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.884403] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.884590] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.884795] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.885012] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.885399] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.885611] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.885871] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.885976] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.886093] (SurfaceScanner) StderrLine: {'line': b'  121 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[6.886190] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.886288] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.886458] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[6.886757] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.886866] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.886955] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.887044] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.887132] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.887220] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.887308] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.887394] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.887480] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.887691] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.887780] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.887890] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.887985] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.888357] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.888720] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.888962] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.889059] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.889154] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[6.889246] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[6.889426] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[6.889519] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[6.889610] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[6.889702] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[6.889795] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[6.889887] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[6.889980] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.890073] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.890172] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.890661] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.890898] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.891013] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.891225] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.891327] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.891428] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[6.891523] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.891789] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.891888] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.891987] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.892314] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.892416] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.892509] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.892600] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.892697] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.892802] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.892889] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.892973] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.893059] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.893145] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.893248] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.893344] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.893450] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.893538] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.893645] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.893730] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.893832] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.893925] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.894018] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.894111] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.894205] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.894297] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.894390] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.894482] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.894573] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.894677] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.894771] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.894881] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.894972] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.895055] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.895144] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[6.895227] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.895308] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.895391] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.895473] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.895555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.895636] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.895725] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.895807] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.895887] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.895969] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.896065] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.896150] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.896234] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.896316] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.896428] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.896512] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.896594] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.896677] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.896772] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.896871] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.896963] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.897055] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.897146] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.897240] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.897331] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.897425] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.897519] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.897612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.897705] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.897806] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.897921] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[6.898005] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.898087] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.898175] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.898265] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.898347] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.898429] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.898511] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.898592] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.898673] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.898768] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.898852] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.898935] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.899026] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.899111] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.899197] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.899310] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.899407] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.899510] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.899615] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.899718] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.899830] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.899929] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.900039] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.900141] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.900242] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.900343] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.900445] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.900545] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.900647] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.900748] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.900850] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.900999] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[6.901101] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.901202] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.901310] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.901419] (SurfaceScanner) StderrLine: {'line': b'  128 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[6.901520] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.901619] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.901743] (SurfaceScanner) StderrLine: {'line': b'  130 | \x1b[01;31m\x1b[Kllback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[6.901844] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.901945] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.902047] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.902150] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.902251] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.902360] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.902469] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.902569] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.902675] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.902777] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.902885] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.902988] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.903087] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.903187] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.903288] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.903410] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.903512] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.903614] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.903717] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[6.903835] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[6.903942] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[6.904053] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[6.904162] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[6.904265] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[6.904371] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[6.904487] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[6.904601] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.904705] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.904828] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.904964] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905073] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905186] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905315] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.905420] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905530] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[6.905631] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.905732] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.905834] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.905936] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.906037] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.906141] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.906243] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.906344] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.906455] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.906564] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.906666] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.906783] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.906888] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.906993] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.907112] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.907229] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.907352] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.907459] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.907583] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.907697] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.907820] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.907929] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.908041] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.908159] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.908258] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.908359] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.908457] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.908555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.908653] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.908751] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.908869] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.908975] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.909086] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.909193] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.909306] (SurfaceScanner) StderrLine: {'line': b'  130 | \x1b[01;36m\x1b[Kllback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[6.909413] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.909521] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.909632] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.909738] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.909850] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.909948] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.910052] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.910151] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.910249] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.910348] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.910466] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.910564] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.910662] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.910760] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.910878] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.911016] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.911122] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.911228] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.911336] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.911442] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.911548] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.911655] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.911775] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.911876] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.911976] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.912088] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.912191] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.912291] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.912400] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.912500] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.912600] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.912730] (SurfaceScanner) StderrLine: {'line': b'  130 | \x1b[01;31m\x1b[Kllback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[6.912831] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.912931] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.913030] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.913145] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.913247] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.913345] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.913445] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.913552] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.913652] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.913766] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.913875] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.913977] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.914079] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.914182] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.914284] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.914388] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.914498] (-) TimerEvent: {}
[6.914621] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.914738] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.914851] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.914952] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.915051] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.915148] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.915247] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.915343] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.915451] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.915549] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.915647] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.915746] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.915874] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.915981] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.916108] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.916218] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.916358] (SurfaceScanner) StderrLine: {'line': b'  130 | \x1b[01;31m\x1b[Kllback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[6.916466] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.916572] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.916678] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.916804] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.916912] (SurfaceScanner) StderrLine: {'line': b'  135 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[6.917013] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.917122] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.917246] (SurfaceScanner) StderrLine: {'line': b'  137 |   \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[6.917355] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.917455] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.917555] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.917656] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.917756] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.917872] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.917974] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.918075] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.918186] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.918290] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.918392] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.918494] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.918597] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.918699] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.918812] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.918936] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.919038] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.919138] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.919239] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[6.919340] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[6.919441] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[6.919541] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[6.919638] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[6.919738] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[6.919836] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[6.919937] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[6.920046] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.920151] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.920265] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.920402] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.920513] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.920629] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.920742] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.920860] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.920979] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[6.921087] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.921192] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.921316] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.921426] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.921539] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.921644] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.921761] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.921861] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.921961] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.922062] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.922166] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.922266] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.922377] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.922478] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.922586] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.922696] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.922807] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.922917] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.923043] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.923147] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.923246] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.923345] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.923448] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.923549] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.923651] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.923776] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.923885] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.923990] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.924108] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.924215] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.924319] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.924424] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.924530] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.924635] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.924757] (SurfaceScanner) StderrLine: {'line': b'  137 |   \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[6.924874] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.924977] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.925076] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.925178] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.925282] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.925383] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.925485] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.925589] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.925690] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.925807] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.925916] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.926025] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.926136] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.926248] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.926375] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.926513] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.926631] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.926743] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.926871] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.926968] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.927065] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.927159] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.927255] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.927354] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.927452] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.927547] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.927644] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.927738] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.927856] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.927960] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.928077] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.928213] (SurfaceScanner) StderrLine: {'line': b'  137 |   \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[6.928322] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.928430] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.928544] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.928668] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.928773] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.928877] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.928981] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.929089] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.929194] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.929298] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.929403] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.929508] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.929613] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.929729] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.929847] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.929951] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.930070] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.930181] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.930281] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.930381] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.930483] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.930585] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.930688] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.930793] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.930902] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.931006] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.931106] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.931207] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.931307] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.931406] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.931516] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.931617] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.931740] (SurfaceScanner) StderrLine: {'line': b'  137 |   \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[6.931856] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.931968] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.932088] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.932203] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.932316] (SurfaceScanner) StderrLine: {'line': b'  142 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[6.932422] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.932528] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.932667] (SurfaceScanner) StderrLine: {'line': b'  144 | \x1b[01;31m\x1b[Kate emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[6.932795] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.932898] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.932997] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.933100] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.933203] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.933304] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.933404] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.933513] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.933612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.933712] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.933814] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.933915] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.934016] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.934117] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.934232] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.934349] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.934452] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.934552] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.934653] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[6.934767] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[6.934870] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[6.934974] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[6.935080] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[6.935186] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[6.935289] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[6.935393] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[6.935508] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.935620] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.935730] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.935867] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.935983] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.936104] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.936227] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.936330] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.936436] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[6.936534] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.936630] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.936728] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.936842] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.936952] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.937055] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.937159] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.937264] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.937367] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.937472] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.937575] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.937681] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.937785] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.937885] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.938012] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.938139] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.938261] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.938368] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.938492] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.938596] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.938698] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.938816] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.938916] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.939014] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.939122] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.939220] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.939318] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.939420] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.939516] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.939624] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.939721] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.939833] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.939936] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.940050] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.940165] (SurfaceScanner) StderrLine: {'line': b'  144 | \x1b[01;36m\x1b[Kate emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[6.940276] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.940385] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.940495] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.940607] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.940713] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.940837] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.940963] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.941080] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.941197] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.941311] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.941428] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.941544] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.941672] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.941801] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.941920] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.942068] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[6.942185] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.942300] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.942417] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.942533] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.942649] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.942765] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.942888] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.942983] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.943082] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.943176] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.943271] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.943368] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.943462] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.943558] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.943663] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.943778] (SurfaceScanner) StderrLine: {'line': b'  144 | \x1b[01;31m\x1b[Kate emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[6.943898] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.944004] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.944147] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.944304] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.944417] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.944525] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.944635] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.944742] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.944895] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.945022] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.945141] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.945257] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.945384] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.945499] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.945617] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.945734] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.945890] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[6.945989] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.946086] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.946184] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[6.946282] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[6.946377] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.946474] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.946570] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.946672] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.946769] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.946865] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.946963] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.947058] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.947155] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.947262] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.947359] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.947480] (SurfaceScanner) StderrLine: {'line': b'  144 | \x1b[01;31m\x1b[Kate emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[6.947589] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.947687] (SurfaceScanner) StderrLine: {'line': b'\n'}
[6.947797] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.947912] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.948057] (SurfaceScanner) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[6.948171] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.948277] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[6.948387] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.948494] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.948599] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.948705] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.948822] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.948929] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.949047] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.949152] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.949273] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.949373] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[6.949478] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.949580] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.949720] (SurfaceScanner) StderrLine: {'line': b' 1477 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[6.949829] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.949922] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.950023] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = void (RPI_Camera_node::*&&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.950139] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1473:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.950311] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.950413] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.950526] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.950643] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.950751] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1391:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.950858] (SurfaceScanner) StderrLine: {'line': b' 1391 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[6.950962] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.951067] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.951186] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.951303] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.951417] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[6.951531] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.951656] (SurfaceScanner) StderrLine: {'line': b' 1414 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[6.951760] (SurfaceScanner) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.951869] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.951992] (SurfaceScanner) StderrLine: {'line': b' 1414 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[6.952103] (SurfaceScanner) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.952202] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.952306] (SurfaceScanner) StderrLine: {'line': b' 1415 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[6.952402] (SurfaceScanner) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.952496] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.952617] (SurfaceScanner) StderrLine: {'line': b' 1415 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[6.952714] (SurfaceScanner) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.014617] (-) TimerEvent: {}
[7.114915] (-) TimerEvent: {}
[7.215210] (-) TimerEvent: {}
[7.315511] (-) TimerEvent: {}
[7.392907] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[7.393100] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[7.393210] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/unordered_map:40\x1b[m\x1b[K,\n'}
[7.393313] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/functional:61\x1b[m\x1b[K,\n'}
[7.393413] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[7.393511] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[7.393609] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:55\x1b[m\x1b[K,\n'}
[7.393704] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.393816] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[7.393929] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[7.394041] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[7.394173] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = RPI_Camera_node; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.394290] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = RPI_Camera_node; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<RPI_Camera_node>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.394421] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.394540] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.394664] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.394787] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:409:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.394904] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:862:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.395018] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:878:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = RPI_Camera_node; _Args = {const char (&)[16]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.395133] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:125:55:\x1b[m\x1b[K   required from here\n'}
[7.395244] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node(const char [16])\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.395364] (SurfaceScanner) StderrLine: {'line': b'  162 |         { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[7.395476] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.395586] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[7.395693] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:17:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node()\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.395817] (SurfaceScanner) StderrLine: {'line': b'   17 |   public: \x1b[01;36m\x1b[KRPI_Camera_node\x1b[m\x1b[K() : Node("camera_node"){\n'}
[7.395919] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.396017] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:17:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.415619] (-) TimerEvent: {}
[7.444269] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.444466] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.444582] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.444885] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:4:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[7.445020] (SurfaceScanner) StderrLine: {'line': b'    4 | using smartLaserLine = std::shared_ptr<\x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K>;\n'}
[7.445135] (SurfaceScanner) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.445245] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:4:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[7.445360] (SurfaceScanner) StderrLine: {'line': b'    4 | using smartLaserLine = std::shared_ptr<LaserLine\x1b[01;31m\x1b[K>\x1b[m\x1b[K;\n'}
[7.445466] (SurfaceScanner) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[7.445572] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.445818] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:16:44:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_rotMat\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.445951] (SurfaceScanner) StderrLine: {'line': b'   16 |     cv::Mat m_originalImg, m_imgWithLaser, \x1b[01;35m\x1b[Km_rotMat\x1b[m\x1b[K, m_mask;\n'}
[7.446077] (SurfaceScanner) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.446194] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:15:29:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_tVec\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.446322] (SurfaceScanner) StderrLine: {'line': b'   15 |     cv::Mat m_ImgDiffLaser, \x1b[01;35m\x1b[Km_tVec\x1b[m\x1b[K, m_laserPoints;\n'}
[7.446441] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[7.446565] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.446685] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.446817] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.446925] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:32:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.447034] (SurfaceScanner) StderrLine: {'line': b'   32 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[7.447156] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.447262] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.447371] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.447490] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.447597] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:16:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_mask\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.447708] (SurfaceScanner) StderrLine: {'line': b'   16 |     cv::Mat m_originalImg, m_imgWithLaser, m_rotMat, \x1b[01;35m\x1b[Km_mask\x1b[m\x1b[K;\n'}
[7.447828] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[7.447935] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:15:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_ImgDiffLaser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.448067] (SurfaceScanner) StderrLine: {'line': b'   15 |     cv::Mat \x1b[01;35m\x1b[Km_ImgDiffLaser\x1b[m\x1b[K, m_tVec, m_laserPoints;\n'}
[7.448386] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.448520] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.448644] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.448787] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.448904] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:32:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.449019] (SurfaceScanner) StderrLine: {'line': b'   32 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[7.449133] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.449243] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.449360] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.449473] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.449595] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:\x1b[m\x1b[K In copy constructor \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.449712] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:16:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_mask\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.449847] (SurfaceScanner) StderrLine: {'line': b'   16 |     cv::Mat m_originalImg, m_imgWithLaser, m_rotMat, \x1b[01;35m\x1b[Km_mask\x1b[m\x1b[K;\n'}
[7.449958] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[7.450068] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:15:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_ImgDiffLaser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.450183] (SurfaceScanner) StderrLine: {'line': b'   15 |     cv::Mat \x1b[01;35m\x1b[Km_ImgDiffLaser\x1b[m\x1b[K, m_tVec, m_laserPoints;\n'}
[7.450290] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.450393] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.450505] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.450608] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.450723] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:46:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.450843] (SurfaceScanner) StderrLine: {'line': b'   46 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[7.450951] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.451051] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.451153] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.451251] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.451359] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:\x1b[m\x1b[K At global scope:\n'}
[7.451467] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:4:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kconst cv::Mat defaultMat\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.451721] (SurfaceScanner) StderrLine: {'line': b'    4 | const cv::Mat \x1b[01;31m\x1b[KdefaultMat\x1b[m\x1b[K = cv::Mat();//cv::Mat::zeros(cv::Size(3,3), CV_8U);\n'}
[7.451862] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.452099] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.452233] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.452358] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.452589] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.452706] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:4:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst cv::Mat defaultMat\x1b[m\x1b[K\xe2\x80\x99 previously declared here\n'}
[7.452835] (SurfaceScanner) StderrLine: {'line': b'    4 | const cv::Mat \x1b[01;36m\x1b[KdefaultMat\x1b[m\x1b[K = cv::Mat();//cv::Mat::zeros(cv::Size(3,3), CV_8U);\n'}
[7.452945] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.453052] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.453161] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.453269] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.453373] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:12:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::getLinePixels(cv::InputArray)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.453483] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;31m\x1b[KgetLinePixels\x1b[m\x1b[K(cv::InputArray diffImg){\n'}
[7.453588] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.453806] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.453920] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.454026] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.454124] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.454232] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:12:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::getLinePixels(cv::InputArray)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.454355] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;36m\x1b[KgetLinePixels\x1b[m\x1b[K(cv::InputArray diffImg){\n'}
[7.454470] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.455084] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.455211] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.455330] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.455460] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:93:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::world2cam(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.455578] (SurfaceScanner) StderrLine: {'line': b'   93 |     cv::Mat \x1b[01;31m\x1b[Kworld2cam\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[7.455693] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.455815] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.455921] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.456047] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.456159] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.456264] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:93:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::world2cam(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.456372] (SurfaceScanner) StderrLine: {'line': b'   93 |     cv::Mat \x1b[01;36m\x1b[Kworld2cam\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[7.456487] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.456590] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.456693] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.456814] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.456925] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:97:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::cam2world(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.457039] (SurfaceScanner) StderrLine: {'line': b'   97 |     cv::Mat \x1b[01;31m\x1b[Kcam2world\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[7.457159] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.457269] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.457381] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.457492] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.457604] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.457717] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:97:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::cam2world(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.457844] (SurfaceScanner) StderrLine: {'line': b'   97 |     cv::Mat \x1b[01;36m\x1b[Kcam2world\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[7.457951] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.458052] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.458160] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.458270] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.458379] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:107:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::bild2world(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.458488] (SurfaceScanner) StderrLine: {'line': b'  107 |     cv::Mat \x1b[01;31m\x1b[Kbild2world\x1b[m\x1b[K(cv::Mat pts, cv::Mat transVec, cv::Mat rotMatrix, cv::Mat cam_matrix, cv::Mat plane=defaultMat){\n'}
[7.458597] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.458706] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.458969] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.459087] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.459197] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.459315] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:107:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::bild2world(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.459437] (SurfaceScanner) StderrLine: {'line': b'  107 |     cv::Mat \x1b[01;36m\x1b[Kbild2world\x1b[m\x1b[K(cv::Mat pts, cv::Mat transVec, cv::Mat rotMatrix, cv::Mat cam_matrix, cv::Mat plane=defaultMat){\n'}
[7.459547] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.459657] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.459768] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.459877] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.459993] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:131:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::planeFitWithSvd(const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.460116] (SurfaceScanner) StderrLine: {'line': b'  131 |     cv::Mat \x1b[01;31m\x1b[KplaneFitWithSvd\x1b[m\x1b[K(const cv::Mat &points){\n'}
[7.460221] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.460326] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[7.460433] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.460537] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.460641] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.460747] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:131:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::planeFitWithSvd(const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.460859] (SurfaceScanner) StderrLine: {'line': b'  131 |     cv::Mat \x1b[01;36m\x1b[KplaneFitWithSvd\x1b[m\x1b[K(const cv::Mat &points){\n'}
[7.460963] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.461069] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.461178] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.461281] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kclass LaserLine\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.461393] (SurfaceScanner) StderrLine: {'line': b'   12 | class \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K\n'}
[7.461497] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.461605] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.461727] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.461851] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.461963] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious definition of \xe2\x80\x98\x1b[01m\x1b[Kclass LaserLine\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.462072] (SurfaceScanner) StderrLine: {'line': b'   12 | class \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K\n'}
[7.462180] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.462287] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.462397] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.462519] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:32:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.462645] (SurfaceScanner) StderrLine: {'line': b'   32 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[7.462775] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.462881] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.462991] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.463096] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.463201] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:32:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.463311] (SurfaceScanner) StderrLine: {'line': b'   32 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[7.463419] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.463523] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.463644] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.463754] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:46:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.463887] (SurfaceScanner) StderrLine: {'line': b'   46 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[7.463994] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.464113] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.464215] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.464319] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.464427] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:46:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.464535] (SurfaceScanner) StderrLine: {'line': b'   46 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[7.464643] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.464744] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.464865] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.464971] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:64:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::~LaserLine()\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.465078] (SurfaceScanner) StderrLine: {'line': b'   64 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::~LaserLine(){\n'}
[7.465188] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.465299] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.465410] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.465519] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.465630] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:64:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::~LaserLine()\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.465745] (SurfaceScanner) StderrLine: {'line': b'   64 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::~LaserLine(){\n'}
[7.465877] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.465993] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.466101] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.466216] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:68:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_laserPoints() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.466322] (SurfaceScanner) StderrLine: {'line': b'   68 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_laserPoints() const{\n'}
[7.466422] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.466525] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.466628] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.466733] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.466856] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:68:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_laserPoints() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.466970] (SurfaceScanner) StderrLine: {'line': b'   68 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_laserPoints() const{\n'}
[7.467094] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.467198] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.467311] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.467423] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:72:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_rotMatrix() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.467538] (SurfaceScanner) StderrLine: {'line': b'   72 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_rotMatrix() const{\n'}
[7.467649] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.467771] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.467881] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.467989] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.468113] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:72:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_rotMatrix() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.468225] (SurfaceScanner) StderrLine: {'line': b'   72 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_rotMatrix() const{\n'}
[7.468331] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.468437] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.468557] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.468667] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:76:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_tVec() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.468779] (SurfaceScanner) StderrLine: {'line': b'   76 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_tVec() const{\n'}
[7.468886] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.468992] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.469100] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.469215] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.469329] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:76:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_tVec() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.469533] (SurfaceScanner) StderrLine: {'line': b'   76 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_tVec() const{\n'}
[7.469644] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.469752] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[7.469887] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.469999] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:80:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine& LaserLine::operator=(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.470111] (SurfaceScanner) StderrLine: {'line': b'   80 | LaserLine &\x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::operator=(const LaserLine &other){\n'}
[7.470222] (SurfaceScanner) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.470333] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[7.470445] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[7.470555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.470669] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:80:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine& LaserLine::operator=(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[7.470796] (SurfaceScanner) StderrLine: {'line': b'   80 | LaserLine &\x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::operator=(const LaserLine &other){\n'}
[7.470902] (SurfaceScanner) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.471020] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:3\x1b[m\x1b[K,\n'}
[7.471137] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.471246] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/rpi_camera.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Camera::calibrate_Camera()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.471356] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/rpi_camera.hpp:83:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::__cxx11::basic_string<char> >::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.471471] (SurfaceScanner) StderrLine: {'line': b'   83 |     for (int i = 0; \x1b[01;35m\x1b[Ki < images.size()\x1b[m\x1b[K; i++)\n'}
[7.471580] (SurfaceScanner) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.515730] (-) TimerEvent: {}
[7.616056] (-) TimerEvent: {}
[7.716342] (-) TimerEvent: {}
[7.816638] (-) TimerEvent: {}
[7.913405] (SurfaceScanner) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/camera_node.dir/build.make:76: CMakeFiles/camera_node.dir/src/camera_node.cpp.o] Error 1\n'}
[7.913667] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/camera_node.dir/all] Error 2\n'}
[7.913791] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** Waiting for unfinished jobs....\n'}
[7.916710] (-) TimerEvent: {}
[8.016967] (-) TimerEvent: {}
[8.117263] (-) TimerEvent: {}
[8.217558] (-) TimerEvent: {}
[8.317850] (-) TimerEvent: {}
[8.418130] (-) TimerEvent: {}
[8.518383] (-) TimerEvent: {}
[8.618659] (-) TimerEvent: {}
[8.718922] (-) TimerEvent: {}
[8.752465] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[8.752600] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KScanner::Scanner()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.752662] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:61:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KScanner::m_Calibrated\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.752720] (SurfaceScanner) StderrLine: {'line': b'   61 |     bool \x1b[01;35m\x1b[Km_Calibrated\x1b[m\x1b[K;\n'}
[8.752773] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.752822] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:60:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KLaser Scanner::m_Laser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.752882] (SurfaceScanner) StderrLine: {'line': b'   60 |     Laser \x1b[01;35m\x1b[Km_Laser\x1b[m\x1b[K;\n'}
[8.752936] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.752984] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:71:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.753035] (SurfaceScanner) StderrLine: {'line': b'   71 | \x1b[01;35m\x1b[KScanner\x1b[m\x1b[K::Scanner(): m_Calibrated(false), m_Laser(Laser()), m_Camera(Camera()), m_CurrentSurface(new pcl::PCLPointCloud2()){\n'}
[8.753090] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.756652] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Scanner::calibrateScanner(const std::vector<cv::Mat>&, const cv::Mat&, const cv::Mat&, const bool&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.756785] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:124:60:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kimages\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.756848] (SurfaceScanner) StderrLine: {'line': b'  124 | void Scanner::calibrateScanner(\x1b[01;35m\x1b[Kconst std::vector<cv::Mat> &images\x1b[m\x1b[K, const cv::Mat &calibration_img, const cv::Mat &calibration_img_laser, const bool &safe_data_in_npz){\n'}
[8.756902] (SurfaceScanner) StderrLine: {'line': b'      |                                \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[8.756953] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:124:150:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksafe_data_in_npz\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.757006] (SurfaceScanner) StderrLine: {'line': b'  124 | void Scanner::calibrateScanner(const std::vector<cv::Mat> &images, const cv::Mat &calibration_img, const cv::Mat &calibration_img_laser, \x1b[01;35m\x1b[Kconst bool &safe_data_in_npz\x1b[m\x1b[K){\n'}
[8.757065] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                                                                          \x1b[01;35m\x1b[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.768058] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[8.768196] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::tuple<bool, cv::Mat, cv::Mat, cv::Mat> Scanner::get_pose_in_charuco_board(cv::Ptr<cv::aruco::DetectorParameters>, cv::Ptr<cv::aruco::Board>, cv::Ptr<cv::aruco::Dictionary>, const cv::Mat&, const bool&) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.768261] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:147:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kcharuco_retval\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\x07-Wunused-variable\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.768327] (SurfaceScanner) StderrLine: {'line': b'  147 |         bool \x1b[01;35m\x1b[Kcharuco_retval\x1b[m\x1b[K = cv::aruco::interpolateCornersCharuco(corners, ids, img, &board, charuco_corners, charuco_ids);\n'}
[8.768380] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.790225] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool Scanner::calibrateLaser(const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.790364] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:242:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Km_laser\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Km_Laser\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.790425] (SurfaceScanner) StderrLine: {'line': b'  242 |     \x1b[01;31m\x1b[Km_laser\x1b[m\x1b[K.set_up(LaserLine(charuco_board, charuco_board_laser, std::get<1>(poseFirstBoard), std::get<2>(poseFirstBoard), std::get<3>(poseFirstBoard)));\n'}
[8.790478] (SurfaceScanner) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.790527] (SurfaceScanner) StderrLine: {'line': b'      |     \x1b[32m\x1b[Km_Laser\x1b[m\x1b[K\n'}
[8.793944] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kpcl::PCLPointCloud2ConstPtr& Scanner::get_pcd() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.794094] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:261:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kpcl::PCLPointCloud2ConstPtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const pcl::PCLPointCloud2>&\x1b[m\x1b[K\xe2\x80\x99} to an rvalue of type \xe2\x80\x98\x1b[01m\x1b[Kpcl::PCLPointCloud2ConstPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const pcl::PCLPointCloud2>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[8.794166] (SurfaceScanner) StderrLine: {'line': b'  261 |     return \x1b[01;31m\x1b[Km_CurrentSurface\x1b[m\x1b[K;\n'}
[8.794252] (SurfaceScanner) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.794463] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.794557] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.794616] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.794670] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  after user-defined conversion: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = pcl::PCLPointCloud2; <template-parameter-2-2> = void; _Tp = const pcl::PCLPointCloud2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.794726] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[8.794776] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.794824] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[8.794880] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Scanner::updatePcd(const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.794930] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:264:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksurface_koords\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.794987] (SurfaceScanner) StderrLine: {'line': b'  264 | void Scanner::updatePcd(\x1b[01;35m\x1b[Kconst cv::Mat &surface_koords\x1b[m\x1b[K, const cv::Mat &point_colors){\n'}
[8.795035] (SurfaceScanner) StderrLine: {'line': b'      |                         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.795082] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:264:71:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpoint_colors\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.795131] (SurfaceScanner) StderrLine: {'line': b'  264 | void Scanner::updatePcd(const cv::Mat &surface_koords, \x1b[01;35m\x1b[Kconst cv::Mat &point_colors\x1b[m\x1b[K){\n'}
[8.795179] (SurfaceScanner) StderrLine: {'line': b'      |                                                        \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.819039] (-) TimerEvent: {}
[8.919307] (-) TimerEvent: {}
[8.968407] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::SurfaceScannerNode()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.968808] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:40:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&SurfaceScannerNode::calibrateScannerSrvCallback\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.968883] (SurfaceScanner) StderrLine: {'line': b'   40 |     m_calibrateScannerSrv = create_service("calibrate_scanner", &\x1b[01;31m\x1b[KcalibrateScannerSrvCallback\x1b[m\x1b[K);\n'}
[8.968939] (SurfaceScanner) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.968990] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:40:43:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_service(const char [18], void (SurfaceScannerNode::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.969055] (SurfaceScanner) StderrLine: {'line': b'   40 |     m_calibrateScannerSrv = \x1b[01;31m\x1b[Kcreate_service("calibrate_scanner", &calibrateScannerSrvCallback)\x1b[m\x1b[K;\n'}
[8.969106] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.969160] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[8.969209] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[8.969259] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.969308] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.969364] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.969417] (SurfaceScanner) StderrLine: {'line': b'  267 |   \x1b[01;36m\x1b[Kcreate_service\x1b[m\x1b[K(\n'}
[8.969467] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.969516] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.969565] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:40:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KServiceT\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.969616] (SurfaceScanner) StderrLine: {'line': b'   40 |     m_calibrateScannerSrv = \x1b[01;36m\x1b[Kcreate_service("calibrate_scanner", &calibrateScannerSrvCallback)\x1b[m\x1b[K;\n'}
[8.969664] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.969712] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:42:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&SurfaceScannerNode::calibrateWithImportSrvCallback\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.969786] (SurfaceScanner) StderrLine: {'line': b'   42 |     m_calibrateLaserWithImportSrv = create_service("calibrate_with_import", &\x1b[01;31m\x1b[KcalibrateWithImportSrvCallback\x1b[m\x1b[K);\n'}
[8.969844] (SurfaceScanner) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.969900] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:42:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_service(const char [22], void (SurfaceScannerNode::*)(std::shared_ptr<interfaces::srv::CalibrateLaserImport_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::CalibrateLaserImport_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.969960] (SurfaceScanner) StderrLine: {'line': b'   42 |     m_calibrateLaserWithImportSrv = \x1b[01;31m\x1b[Kcreate_service("calibrate_with_import", &calibrateWithImportSrvCallback)\x1b[m\x1b[K;\n'}
[8.970023] (SurfaceScanner) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.970079] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[8.970135] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[8.970190] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.970246] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.970306] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.970365] (SurfaceScanner) StderrLine: {'line': b'  267 |   \x1b[01;36m\x1b[Kcreate_service\x1b[m\x1b[K(\n'}
[8.970421] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.970476] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.970539] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:42:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KServiceT\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.970597] (SurfaceScanner) StderrLine: {'line': b'   42 |     m_calibrateLaserWithImportSrv = \x1b[01;36m\x1b[Kcreate_service("calibrate_with_import", &calibrateWithImportSrvCallback)\x1b[m\x1b[K;\n'}
[8.970653] (SurfaceScanner) StderrLine: {'line': b'      |                                     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.970709] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:44:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&SurfaceScannerNode::imagePairCallback\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.970793] (SurfaceScanner) StderrLine: {'line': b'   44 |     imgPairSub = create_subscription("img_pair", 10, std::bind(&\x1b[01;31m\x1b[KimagePairCallback\x1b[m\x1b[K, this, _1));\n'}
[8.970852] (SurfaceScanner) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.973770] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:44:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_subscription(const char [9], int, std::_Bind_helper<false, void (SurfaceScannerNode::*)(const interfaces::msg::ImagePair_<std::allocator<void> >&), SurfaceScannerNode*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.973948] (SurfaceScanner) StderrLine: {'line': b'   44 |     imgPairSub = \x1b[01;31m\x1b[Kcreate_subscription("img_pair", 10, std::bind(&imagePairCallback, this, _1))\x1b[m\x1b[K;\n'}
[8.974025] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.974083] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[8.974169] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[8.974258] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.974332] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.974388] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.974447] (SurfaceScanner) StderrLine: {'line': b'  219 |   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[8.974500] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.974556] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.974628] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:44:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KMessageT\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.974684] (SurfaceScanner) StderrLine: {'line': b'   44 |     imgPairSub = \x1b[01;36m\x1b[Kcreate_subscription("img_pair", 10, std::bind(&imagePairCallback, this, _1))\x1b[m\x1b[K;\n'}
[8.974746] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.974817] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:46:80:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&SurfaceScannerNode::camCalibImgsCallback\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.974895] (SurfaceScanner) StderrLine: {'line': b'   46 |     camCalibrateImgsSub = create_subscription("cam_calib_imgs", 10, std::bind(&\x1b[01;31m\x1b[KcamCalibImgsCallback\x1b[m\x1b[K, this, _1));\n'}
[8.974959] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.975638] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:46:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_subscription(const char [15], int, std::_Bind_helper<false, void (SurfaceScannerNode::*)(const interfaces::msg::CameraCalibrationImgs_<std::allocator<void> >&), SurfaceScannerNode*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.975748] (SurfaceScanner) StderrLine: {'line': b'   46 |     camCalibrateImgsSub = \x1b[01;31m\x1b[Kcreate_subscription("cam_calib_imgs", 10, std::bind(&camCalibImgsCallback, this, _1))\x1b[m\x1b[K;\n'}
[8.975887] (SurfaceScanner) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.975947] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[8.976000] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[8.976139] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.976194] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.976247] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.976304] (SurfaceScanner) StderrLine: {'line': b'  219 |   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[8.976356] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.976409] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.976462] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:46:46:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KMessageT\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.976603] (SurfaceScanner) StderrLine: {'line': b'   46 |     camCalibrateImgsSub = \x1b[01;36m\x1b[Kcreate_subscription("cam_calib_imgs", 10, std::bind(&camCalibImgsCallback, this, _1))\x1b[m\x1b[K;\n'}
[8.976655] (SurfaceScanner) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.976705] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:48:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_publisher<sensor_msgs::msg::PointCloud2>(int, int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.976776] (SurfaceScanner) StderrLine: {'line': b"   48 |     pcdPub = \x1b[01;31m\x1b[Kcreate_publisher<sensor_msgs::msg::PointCloud2>('surface_line', 10)\x1b[m\x1b[K;\n"}
[8.976841] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.976906] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[8.976972] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[8.977051] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.977118] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.977185] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:195:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.977255] (SurfaceScanner) StderrLine: {'line': b'  195 |   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[8.977321] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.977384] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:195:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.977449] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:48:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  cannot convert \xe2\x80\x98\x1b[01m\x1b[K1818848869\x1b[m\x1b[K\xe2\x80\x99 (type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99) to type \xe2\x80\x98\x1b[01m\x1b[Kconst string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[8.977519] (SurfaceScanner) StderrLine: {'line': b"   48 |     pcdPub = create_publisher<sensor_msgs::msg::PointCloud2>(\x1b[01;36m\x1b[K'surface_line'\x1b[m\x1b[K, 10);\n"}
[8.977583] (SurfaceScanner) StderrLine: {'line': b'      |                                                              \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.977646] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:50:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_publisher<sensor_msgs::msg::PointCloud2>(int, int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.977721] (SurfaceScanner) StderrLine: {'line': b"   50 |     laserPlanePub = \x1b[01;31m\x1b[Kcreate_publisher<sensor_msgs::msg::PointCloud2>('laser_plane', 10)\x1b[m\x1b[K;\n"}
[8.977786] (SurfaceScanner) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.977874] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[8.977930] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[8.977993] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.978049] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.978106] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:195:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.978171] (SurfaceScanner) StderrLine: {'line': b'  195 |   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[8.978228] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.978284] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:195:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.978341] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:50:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  cannot convert \xe2\x80\x98\x1b[01m\x1b[K1818324581\x1b[m\x1b[K\xe2\x80\x99 (type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99) to type \xe2\x80\x98\x1b[01m\x1b[Kconst string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[8.978408] (SurfaceScanner) StderrLine: {'line': b"   50 |     laserPlanePub = create_publisher<sensor_msgs::msg::PointCloud2>(\x1b[01;36m\x1b[K'laser_plane'\x1b[m\x1b[K, 10);\n"}
[8.978465] (SurfaceScanner) StderrLine: {'line': b'      |                                                                     \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.982589] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SurfaceScannerNode::calibrateScannerSrvCallback(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.982733] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:61:109:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[8.982823] (SurfaceScanner) StderrLine: {'line': b'   61 | void SurfaceScannerNode::calibrateScannerSrvCallback(\x1b[01;35m\x1b[Kconst std::shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K, std::shared_ptr<std_srvs::srv::Trigger::Response> response){\n'}
[8.982881] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[9.019431] (-) TimerEvent: {}
[9.119695] (-) TimerEvent: {}
[9.219952] (-) TimerEvent: {}
[9.320194] (-) TimerEvent: {}
[9.370815] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.371636] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.371796] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.372376] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.372788] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.372872] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.372929] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.372997] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.373052] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:142:29:\x1b[m\x1b[K   required from here\n'}
[9.373104] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::Dictionary>::shared_ptr(cv::Ptr<cv::aruco::Dictionary>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.373163] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.373215] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[9.373267] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.373322] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.373394] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.373457] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.373523] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[9.373954] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.374437] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.374689] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.374929] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.375003] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.375057] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.375110] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.375163] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.375216] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.375276] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.375333] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.375385] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.375437] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.375490] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.375543] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.375601] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[9.375654] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.375706] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.375759] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.375830] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.375890] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.375948] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.376007] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.376089] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.376151] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.376213] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.376282] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.376365] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.376434] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.376493] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.376552] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.376649] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[9.376712] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.376784] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.376842] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.376898] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.376955] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.377011] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.377066] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.377122] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.377187] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.377245] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.377303] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.377364] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.377421] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.377476] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.377533] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.377592] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[9.377648] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.377705] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.377774] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.377828] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.377882] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.377935] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.377997] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.378051] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.378106] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.378162] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.378217] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.378270] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.378324] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.378379] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.378434] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.378496] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[9.378551] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.378606] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.378661] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.378716] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.378784] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.378841] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.378898] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.378956] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.379013] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.379071] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.379128] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.379194] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.379254] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.379311] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.379368] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.379428] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[9.379484] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.379540] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.379595] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.379652] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.379709] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.379787] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.379888] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.379980] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.380090] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.380196] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.380293] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.380390] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.380490] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.380591] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.380687] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.380785] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[9.380900] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.381018] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.381135] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.381269] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.381395] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.381516] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.381636] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.381748] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.381874] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.381982] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.382092] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.382205] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.382318] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.382428] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.382576] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.382701] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[9.382826] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.382926] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.383028] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.383126] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.383227] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.383323] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.383384] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.383455] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.383551] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[9.383647] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.383716] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.383832] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.383922] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.384029] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.384123] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.384190] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[9.384271] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.384360] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.384422] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.384481] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.384539] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.384596] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.384654] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.384712] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.384781] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[9.384851] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.384905] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.384959] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.385013] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.385074] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.385129] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.385191] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[9.385246] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.385299] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.385354] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.385414] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.385468] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.385522] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.385576] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.385630] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.385685] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.385740] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.385808] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.385863] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.385919] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.385974] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.386030] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.386090] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[9.386146] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.386201] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.386257] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.386318] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.386374] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.386428] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.386483] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.386539] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.386595] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.386652] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.386707] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.386763] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.386832] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.386887] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.386950] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.387007] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[9.387062] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.387120] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.387176] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::Dictionary>*}; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.387234] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.387291] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.387351] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:142:29:\x1b[m\x1b[K   required from here\n'}
[9.387407] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.387468] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[9.387522] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.387576] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.387632] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.387687] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:142:29:\x1b[m\x1b[K   required from here\n'}
[9.387745] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.387800] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[9.387855] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.387909] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.387963] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::Dictionary; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.388020] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[9.388087] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.388141] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.388198] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[9.388253] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[9.388308] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.388365] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[9.388420] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.388474] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::Dictionary>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.388543] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[9.388597] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[9.388658] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.388714] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[9.388768] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.388839] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::Dictionary>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.388898] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[9.388956] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.389014] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.389072] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[9.389137] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.389196] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[9.389254] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.389311] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.389368] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.389425] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.389483] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.389541] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.389601] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.389661] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.389726] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:142:29:\x1b[m\x1b[K   required from here\n'}
[9.389797] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::DetectorParameters>::shared_ptr(cv::Ptr<cv::aruco::DetectorParameters>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.389852] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.389905] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[9.389958] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.390010] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.390064] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.390117] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.390174] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[9.390227] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.390279] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.390331] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.390393] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.390446] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.390499] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.390552] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.390604] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.390656] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.390712] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.390782] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.390841] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.390907] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.390967] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.391027] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.391097] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[9.391157] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.391217] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.391277] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.391336] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.391396] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.391457] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.391516] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.391576] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.391636] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.391697] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.391756] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.391823] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.391876] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.391930] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.391983] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.392050] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[9.392112] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.392165] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.392219] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.392271] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.392331] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.392386] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.392439] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.392498] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.392552] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.392606] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.392659] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.392712] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.392764] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.392832] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.392891] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.392952] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[9.393009] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.393067] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.393131] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.393188] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.393246] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.393306] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.393364] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.393427] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.393486] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.393547] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.393605] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.393664] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.393722] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.393781] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.393851] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.393910] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[9.393966] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.394022] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.394078] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.394134] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.394189] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.394251] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.394308] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.394364] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.394420] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.394477] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.394538] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.394595] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.394655] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.394711] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.394780] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.394838] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[9.394893] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.394947] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.395003] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.395057] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.395110] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.395166] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.395226] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.395282] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.395337] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.395393] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.395447] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.395500] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.395554] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.395608] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.395663] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.395721] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[9.395791] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.395853] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.395910] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.395966] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.396029] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.396091] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.396153] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.396210] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.396267] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.396324] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.396381] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.396437] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.396493] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.396550] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.396612] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.396672] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[9.396728] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.396783] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.396851] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.396905] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.396959] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.397014] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.397068] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.397123] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.397183] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[9.397243] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.397297] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.397351] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.397407] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.397462] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.397517] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.397577] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[9.397632] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.397688] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.397744] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.397814] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.397872] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.397931] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.397988] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.398052] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.398111] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[9.398168] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.398226] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.398284] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.398341] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.398398] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.398463] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.398524] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[9.398581] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.398639] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.398703] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.398761] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.398832] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.398887] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.398942] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.398997] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.399052] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.399107] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.399163] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.399221] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.399276] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.399331] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.399386] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.399454] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[9.399510] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.399564] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.399619] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.399674] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.399733] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.399802] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.399858] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.399914] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.399971] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.400040] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.400101] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.400157] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.400213] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.400270] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.400327] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.400389] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[9.400446] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.400503] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.400560] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::DetectorParameters>*}; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.400620] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.400686] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.400745] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:142:29:\x1b[m\x1b[K   required from here\n'}
[9.400815] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.400876] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[9.400930] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.400984] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.401041] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.401096] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:142:29:\x1b[m\x1b[K   required from here\n'}
[9.401160] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.401217] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[9.401272] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.401326] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.401381] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::DetectorParameters; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.401437] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[9.401492] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.401547] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.401608] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[9.401664] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[9.401718] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.401775] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[9.401846] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.401905] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::DetectorParameters>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.401972] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[9.402030] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[9.402091] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.402150] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[9.402208] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.402266] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::DetectorParameters>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.402326] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[9.402389] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.402447] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.402505] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[9.402563] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.402620] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[9.402677] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.402736] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.402804] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.402857] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.402909] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.402963] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.403019] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.403081] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.403141] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:147:67:\x1b[m\x1b[K   required from here\n'}
[9.403195] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::CharucoBoard>::shared_ptr(cv::Ptr<cv::aruco::Board>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.403249] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.403302] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[9.403359] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.403412] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.403464] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.403517] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.403573] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[9.403625] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.403677] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.403730] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.403801] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.403860] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.403921] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.403980] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.404049] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.404111] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.404173] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.404233] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.404292] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.404358] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.404423] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.404484] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.404547] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[9.404608] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.404667] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.404728] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.404788] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.404855] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.404910] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.404962] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.405013] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.405073] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.405127] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.405179] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.405231] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.405289] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.405343] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.405396] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.405453] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[9.405506] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.405564] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.405618] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.405671] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.405725] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.405795] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.405853] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.405912] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.405970] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.406029] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.406087] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.406144] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.406201] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.406259] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.406317] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.406385] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[9.406443] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.406501] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.406560] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.406617] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.406675] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.406735] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.406805] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.406865] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.406920] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.406977] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.407032] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.407092] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.407146] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.407205] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.407261] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.407318] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[9.407373] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.407427] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.407482] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.407536] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.407590] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.407646] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.407700] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.407768] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.407824] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.407881] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.407936] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.407993] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.408061] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.408125] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.408182] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.408243] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[9.408300] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.408357] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.408415] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.408478] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.408534] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.408591] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.408647] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.408702] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.408759] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.408816] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.408872] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.408928] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.408983] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.409041] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.409103] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.409169] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[9.409226] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.409283] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.409346] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.409402] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.409458] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.409516] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.409572] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.409628] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.409685] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.409741] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.409809] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.409863] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.409917] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.409970] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.410024] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.410081] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[9.410135] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.410189] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.410244] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.410298] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.410352] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.410407] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.410461] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.410514] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.410578] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[9.410634] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.410689] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.410744] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.410813] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.410871] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.410929] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.410996] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[9.411056] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.411113] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.411171] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.411234] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.411292] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.411350] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.411408] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.411465] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.411521] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[9.411579] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.411636] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.411693] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.411750] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.411819] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.411873] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.411935] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[9.411990] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.412058] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.412115] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.412170] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.412225] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.412283] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.412338] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.412393] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.412449] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.412503] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.412558] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.412612] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.412666] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.412721] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.412782] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.412841] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[9.412895] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.412968] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.413027] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[9.413082] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[9.413136] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[9.413197] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[9.413252] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[9.413307] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[9.413363] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.413424] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[9.413479] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[9.413534] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[9.413588] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[9.413643] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[9.413698] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.413756] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[9.413824] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.413881] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.413939] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::Board>*}; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.414000] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.414059] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.414118] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:147:67:\x1b[m\x1b[K   required from here\n'}
[9.414176] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.414234] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[9.414298] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.414355] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.414414] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.414478] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:147:67:\x1b[m\x1b[K   required from here\n'}
[9.414536] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.414600] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[9.414659] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.414718] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[9.414790] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::CharucoBoard; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.414849] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[9.414906] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.414964] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.415023] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[9.415086] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[9.415143] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.415205] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[9.415261] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.415316] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::CharucoBoard>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.415374] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[9.415435] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[9.415491] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.415548] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[9.415603] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.415659] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::CharucoBoard>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.415717] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[9.415773] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.415829] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.415886] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[9.415943] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.415999] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[9.420314] (-) TimerEvent: {}
[9.520574] (-) TimerEvent: {}
[9.620829] (-) TimerEvent: {}
[9.721086] (-) TimerEvent: {}
[9.821347] (-) TimerEvent: {}
[9.921624] (-) TimerEvent: {}
[9.961403] (SurfaceScanner) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/surface_scanner_node.dir/build.make:76: CMakeFiles/surface_scanner_node.dir/src/SurfaceScannerNode.cpp.o] Error 1\n'}
[9.961586] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/surface_scanner_node.dir/all] Error 2\n'}
[9.961689] (SurfaceScanner) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[9.963893] (SurfaceScanner) CommandEnded: {'returncode': 2}
[9.993329] (SurfaceScanner) JobEnded: {'identifier': 'SurfaceScanner', 'rc': 2}
[10.010755] (-) EventReactorShutdown: {}
