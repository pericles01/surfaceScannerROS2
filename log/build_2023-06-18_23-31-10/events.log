[0.000000] (-) TimerEvent: {}
[0.000112] (interfaces) JobQueued: {'identifier': 'interfaces', 'dependencies': OrderedDict()}
[0.000147] (SurfaceScanner) JobQueued: {'identifier': 'SurfaceScanner', 'dependencies': OrderedDict([('interfaces', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces')])}
[0.000183] (interfaces) JobStarted: {'identifier': 'interfaces'}
[0.008110] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'cmake'}
[0.008654] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'build'}
[0.009504] (interfaces) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', '--', '-j8', '-l8'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble')]), 'shell': False}
[0.047058] (interfaces) StdoutLine: {'line': b'[  2%] Built target interfaces__cpp\n'}
[0.047392] (interfaces) StdoutLine: {'line': b'[ 12%] Built target interfaces__rosidl_generator_c\n'}
[0.055853] (interfaces) StdoutLine: {'line': b'[ 12%] Built target ament_cmake_python_copy_interfaces\n'}
[0.069935] (interfaces) StdoutLine: {'line': b'[ 23%] Built target interfaces__rosidl_typesupport_cpp\n'}
[0.071230] (interfaces) StdoutLine: {'line': b'[ 34%] Built target interfaces__rosidl_typesupport_fastrtps_cpp\n'}
[0.072981] (interfaces) StdoutLine: {'line': b'[ 44%] Built target interfaces__rosidl_typesupport_introspection_cpp\n'}
[0.078630] (interfaces) StdoutLine: {'line': b'[ 55%] Built target interfaces__rosidl_typesupport_c\n'}
[0.080081] (interfaces) StdoutLine: {'line': b'[ 65%] Built target interfaces__rosidl_typesupport_introspection_c\n'}
[0.086421] (interfaces) StdoutLine: {'line': b'[ 76%] Built target interfaces__rosidl_typesupport_fastrtps_c\n'}
[0.098976] (-) TimerEvent: {}
[0.100426] (interfaces) StdoutLine: {'line': b'[ 76%] Built target interfaces\n'}
[0.114709] (interfaces) StdoutLine: {'line': b'[ 78%] Built target interfaces__py\n'}
[0.131578] (interfaces) StdoutLine: {'line': b'[ 87%] Built target interfaces__rosidl_generator_py\n'}
[0.149494] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_fastrtps_c__pyext\n'}
[0.149729] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_c__pyext\n'}
[0.149844] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_introspection_c__pyext\n'}
[0.199090] (-) TimerEvent: {}
[0.299370] (-) TimerEvent: {}
[0.399646] (-) TimerEvent: {}
[0.425976] (interfaces) StdoutLine: {'line': b'running egg_info\n'}
[0.444090] (interfaces) StdoutLine: {'line': b'writing interfaces.egg-info/PKG-INFO\n'}
[0.444325] (interfaces) StdoutLine: {'line': b'writing dependency_links to interfaces.egg-info/dependency_links.txt\n'}
[0.444522] (interfaces) StdoutLine: {'line': b'writing top-level names to interfaces.egg-info/top_level.txt\n'}
[0.499757] (-) TimerEvent: {}
[0.512801] (interfaces) StdoutLine: {'line': b"reading manifest file 'interfaces.egg-info/SOURCES.txt'\n"}
[0.513394] (interfaces) StdoutLine: {'line': b"writing manifest file 'interfaces.egg-info/SOURCES.txt'\n"}
[0.572849] (interfaces) StdoutLine: {'line': b'[100%] Built target ament_cmake_python_build_interfaces_egg\n'}
[0.584025] (interfaces) CommandEnded: {'returncode': 0}
[0.599870] (-) TimerEvent: {}
[0.646798] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'install'}
[0.654558] (interfaces) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble')]), 'shell': False}
[0.661386] (interfaces) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.661702] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/rosidl_interfaces/interfaces\n'}
[0.661913] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.662053] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.662174] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.662292] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__functions.h\n'}
[0.662477] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.h\n'}
[0.662580] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__functions.c\n'}
[0.662749] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__struct.h\n'}
[0.662862] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/calibrate_laser_import.h\n'}
[0.662961] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.663058] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/image_pair.h\n'}
[0.663160] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_generator_c__visibility_control.h\n'}
[0.663446] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.663602] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__functions.c\n'}
[0.663841] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__struct.h\n'}
[0.664009] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__struct.h\n'}
[0.664164] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__functions.h\n'}
[0.664285] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__functions.h\n'}
[0.664430] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.h\n'}
[0.664611] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__functions.c\n'}
[0.664727] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.h\n'}
[0.664847] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/camera_calibration_imgs.h\n'}
[0.664944] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/library_path.sh\n'}
[0.665044] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/library_path.dsv\n'}
[0.665163] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_generator_c.so\n'}
[0.665288] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.665429] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.665638] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.665787] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_fastrtps_c.h\n'}
[0.665915] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.666015] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_fastrtps_c__visibility_control.h\n'}
[0.666247] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.666408] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_fastrtps_c.h\n'}
[0.666717] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_fastrtps_c.h\n'}
[0.666864] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_fastrtps_c.so\n'}
[0.666989] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.667109] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.667230] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.667366] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.c\n'}
[0.667496] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_introspection_c.h\n'}
[0.667622] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.667744] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_introspection_c__visibility_control.h\n'}
[0.667868] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.667992] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.c\n'}
[0.668121] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.c\n'}
[0.668252] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_introspection_c.h\n'}
[0.668359] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_introspection_c.h\n'}
[0.668493] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_introspection_c.so\n'}
[0.668609] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_c.so\n'}
[0.668724] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.668839] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.668948] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.669057] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__traits.hpp\n'}
[0.669174] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__builder.hpp\n'}
[0.669299] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__struct.hpp\n'}
[0.669407] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/calibrate_laser_import.hpp\n'}
[0.669515] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.669625] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/image_pair.hpp\n'}
[0.669730] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.669837] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__builder.hpp\n'}
[0.669950] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__struct.hpp\n'}
[0.670060] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__traits.hpp\n'}
[0.670165] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__builder.hpp\n'}
[0.670284] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__traits.hpp\n'}
[0.670396] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__struct.hpp\n'}
[0.670500] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/camera_calibration_imgs.hpp\n'}
[0.670601] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.670730] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.670847] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.670950] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/dds_fastrtps\n'}
[0.671046] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.671139] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.671239] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h\n'}
[0.671361] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.671483] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/dds_fastrtps\n'}
[0.671593] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.671704] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.671810] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_fastrtps_cpp.so\n'}
[0.671919] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.672021] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.672115] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.672206] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.cpp\n'}
[0.672313] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.672421] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.672535] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.672639] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.672747] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.672859] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.cpp\n'}
[0.672979] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.cpp\n'}
[0.673081] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_introspection_cpp.so\n'}
[0.673175] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_cpp.so\n'}
[0.673268] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/pythonpath.sh\n'}
[0.673364] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/pythonpath.dsv\n'}
[0.673482] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info\n'}
[0.673591] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/dependency_links.txt\n'}
[0.673702] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/PKG-INFO\n'}
[0.673810] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/SOURCES.txt\n'}
[0.673919] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/top_level.txt\n'}
[0.674031] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces\n'}
[0.674139] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_introspection_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.674267] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_fastrtps_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.674379] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv\n'}
[0.674492] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/__init__.py\n'}
[0.674605] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/_calibrate_laser_import_s.c\n'}
[0.674730] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/_calibrate_laser_import.py\n'}
[0.674846] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_c.c\n'}
[0.674958] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/libinterfaces__rosidl_generator_py.so\n'}
[0.675066] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.675174] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg\n'}
[0.675299] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_camera_calibration_imgs_s.c\n'}
[0.675405] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_camera_calibration_imgs.py\n'}
[0.675512] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/__init__.py\n'}
[0.675633] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_image_pair.py\n'}
[0.675743] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_image_pair_s.c\n'}
[0.675848] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/__init__.py\n'}
[0.675954] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_fastrtps_c.c\n'}
[0.676058] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_introspection_c.c\n'}
[0.695710] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces'...\n"}
[0.695923] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg'...\n"}
[0.696052] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv'...\n"}
[0.699903] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_fastrtps_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.700126] (-) TimerEvent: {}
[0.700275] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_introspection_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.700439] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.700620] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_generator_py.so\n'}
[0.700757] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/CameraCalibrationImgs.idl\n'}
[0.700900] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/ImagePair.idl\n'}
[0.701043] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport.idl\n'}
[0.701188] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/CameraCalibrationImgs.msg\n'}
[0.701386] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/ImagePair.msg\n'}
[0.701541] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport.srv\n'}
[0.701622] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport_Request.msg\n'}
[0.701738] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport_Response.msg\n'}
[0.701894] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/package_run_dependencies/interfaces\n'}
[0.702043] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/parent_prefix_path/interfaces\n'}
[0.702191] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/ament_prefix_path.sh\n'}
[0.702330] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/ament_prefix_path.dsv\n'}
[0.702428] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/path.sh\n'}
[0.702544] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/path.dsv\n'}
[0.702670] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.bash\n'}
[0.702861] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.sh\n'}
[0.703013] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.zsh\n'}
[0.703157] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.dsv\n'}
[0.703283] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/package.dsv\n'}
[0.703347] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/packages/interfaces\n'}
[0.703409] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cExport.cmake\n'}
[0.703470] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cExport-noconfig.cmake\n'}
[0.703531] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cExport.cmake\n'}
[0.703590] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cExport-noconfig.cmake\n'}
[0.703650] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cExport.cmake\n'}
[0.703708] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cExport-noconfig.cmake\n'}
[0.703767] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cExport.cmake\n'}
[0.703826] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cExport-noconfig.cmake\n'}
[0.703895] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cppExport.cmake\n'}
[0.703964] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cppExport.cmake\n'}
[0.704026] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cppExport-noconfig.cmake\n'}
[0.704085] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cppExport.cmake\n'}
[0.704144] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cppExport-noconfig.cmake\n'}
[0.704203] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cppExport.cmake\n'}
[0.704284] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cppExport-noconfig.cmake\n'}
[0.704348] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_pyExport.cmake\n'}
[0.704413] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_pyExport-noconfig.cmake\n'}
[0.704479] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake-extras.cmake\n'}
[0.704550] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_dependencies-extras.cmake\n'}
[0.704617] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_include_directories-extras.cmake\n'}
[0.704685] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_libraries-extras.cmake\n'}
[0.704764] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_targets-extras.cmake\n'}
[0.705080] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake_export_typesupport_targets-extras.cmake\n'}
[0.705306] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake_export_typesupport_libraries-extras.cmake\n'}
[0.705447] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfacesConfig.cmake\n'}
[0.705511] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfacesConfig-version.cmake\n'}
[0.705574] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/package.xml\n'}
[0.705873] (interfaces) CommandEnded: {'returncode': 0}
[0.800391] (interfaces) JobEnded: {'identifier': 'interfaces', 'rc': 0}
[0.802261] (-) TimerEvent: {}
[0.803069] (SurfaceScanner) JobStarted: {'identifier': 'SurfaceScanner'}
[0.810067] (SurfaceScanner) JobProgress: {'identifier': 'SurfaceScanner', 'progress': 'cmake'}
[0.811005] (SurfaceScanner) JobProgress: {'identifier': 'SurfaceScanner', 'progress': 'build'}
[0.811766] (SurfaceScanner) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner', '--', '-j8', '-l8'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/opt/ros/humble')]), 'shell': False}
[0.849223] (SurfaceScanner) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target camera_node\x1b[0m\n'}
[0.852925] (SurfaceScanner) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target surface_scanner_node\x1b[0m\n'}
[0.867118] (SurfaceScanner) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/camera_node.dir/src/camera_node.cpp.o\x1b[0m\n'}
[0.878386] (SurfaceScanner) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/surface_scanner_node.dir/src/SurfaceScannerNode.cpp.o\x1b[0m\n'}
[0.902370] (-) TimerEvent: {}
[1.002702] (-) TimerEvent: {}
[1.103021] (-) TimerEvent: {}
[1.203326] (-) TimerEvent: {}
[1.303635] (-) TimerEvent: {}
[1.403944] (-) TimerEvent: {}
[1.504258] (-) TimerEvent: {}
[1.604609] (-) TimerEvent: {}
[1.705026] (-) TimerEvent: {}
[1.805363] (-) TimerEvent: {}
[1.905679] (-) TimerEvent: {}
[2.005973] (-) TimerEvent: {}
[2.106321] (-) TimerEvent: {}
[2.206656] (-) TimerEvent: {}
[2.306929] (-) TimerEvent: {}
[2.407259] (-) TimerEvent: {}
[2.507609] (-) TimerEvent: {}
[2.607982] (-) TimerEvent: {}
[2.708325] (-) TimerEvent: {}
[2.808695] (-) TimerEvent: {}
[2.909075] (-) TimerEvent: {}
[3.009404] (-) TimerEvent: {}
[3.109752] (-) TimerEvent: {}
[3.210040] (-) TimerEvent: {}
[3.310417] (-) TimerEvent: {}
[3.410697] (-) TimerEvent: {}
[3.510947] (-) TimerEvent: {}
[3.611213] (-) TimerEvent: {}
[3.711472] (-) TimerEvent: {}
[3.795477] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[3.795639] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.795944] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_cam_calib_imgs\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.796027] (SurfaceScanner) StderrLine: {'line': b'   19 |     srv_send_cam_calib_imgs = create_service<std_srvs::srv::Trigger>("send_cam_calib_imgs", &\x1b[01;31m\x1b[Ksend_cam_calib_imgs\x1b[m\x1b[K);\n'}
[3.796084] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.796136] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:20:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_calib\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.796190] (SurfaceScanner) StderrLine: {'line': b'   20 |     srv_send_img_pair_calib = create_service<std_srvs::srv::Trigger>("send_img_pair_calib", &\x1b[01;31m\x1b[Ksend_img_pair_calib\x1b[m\x1b[K);\n'}
[3.796241] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.796291] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:21:98:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_surface\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.796344] (SurfaceScanner) StderrLine: {'line': b'   21 |     srv_send_img_pair_surface = create_service<std_srvs::srv::Trigger>("send_img_pair_surface", &\x1b[01;31m\x1b[Ksend_img_pair_surface\x1b[m\x1b[K);\n'}
[3.796394] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.796444] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:22:88:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::start_img_stream\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.796496] (SurfaceScanner) StderrLine: {'line': b'   22 |     srv_start_img_stream = create_service<std_srvs::srv::Trigger>("start_img_stream", &\x1b[01;31m\x1b[Kstart_img_stream\x1b[m\x1b[K);\n'}
[3.796546] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.796603] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:23:86:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_calib\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.796661] (SurfaceScanner) StderrLine: {'line': b'   23 |     srv_stop_img_stream = create_service<std_srvs::srv::Trigger>("stop_img_stream", &\x1b[01;31m\x1b[Ksend_img_pair_calib\x1b[m\x1b[K);\n'}
[3.796716] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.811564] (-) TimerEvent: {}
[3.911847] (-) TimerEvent: {}
[4.012122] (-) TimerEvent: {}
[4.112422] (-) TimerEvent: {}
[4.172321] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_img_pair_calib(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.172507] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:39:93:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.172590] (SurfaceScanner) StderrLine: {'line': b'   39 | void RPI_Camera_node::send_img_pair_calib(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.172665] (SurfaceScanner) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.173102] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_img_pair_surface(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.173222] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:49:95:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.173304] (SurfaceScanner) StderrLine: {'line': b'   49 | void RPI_Camera_node::send_img_pair_surface(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.173376] (SurfaceScanner) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.180852] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_cam_calib_imgs(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.181016] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:59:93:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.181100] (SurfaceScanner) StderrLine: {'line': b'   59 | void RPI_Camera_node::send_cam_calib_imgs(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.181306] (SurfaceScanner) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.181384] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::start_img_stream(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.181459] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:85:90:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.181621] (SurfaceScanner) StderrLine: {'line': b'   85 | void RPI_Camera_node::start_img_stream(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.181716] (SurfaceScanner) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.181785] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::stop_img_stream(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.181862] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:99:89:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.181934] (SurfaceScanner) StderrLine: {'line': b'   99 | void RPI_Camera_node::stop_img_stream(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.181997] (SurfaceScanner) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.212548] (-) TimerEvent: {}
[4.312833] (-) TimerEvent: {}
[4.413101] (-) TimerEvent: {}
[4.513398] (-) TimerEvent: {}
[4.613702] (-) TimerEvent: {}
[4.714018] (-) TimerEvent: {}
[4.726641] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:39\x1b[m\x1b[K,\n'}
[4.727017] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.727083] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.727137] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.727191] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.727244] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.727297] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.727359] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.727412] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.727463] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.727531] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.727595] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.727647] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.727701] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.727757] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.727862] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.728003] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.728073] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.728126] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.728183] (SurfaceScanner) StderrLine: {'line': b'   52 |     typename function_traits<decltype( \x1b[01;31m\x1b[K&FunctionT::operator()\x1b[m\x1b[K)>::arguments>::type;\n'}
[4.728239] (SurfaceScanner) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.728294] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.728350] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.728688] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.728748] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.728804] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.728859] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.728920] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.728977] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.729237] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.729295] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.729351] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.729416] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.729474] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.729535] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.729624] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.729744] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730011] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730448] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.730516] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730582] (SurfaceScanner) StderrLine: {'line': b'  121 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[4.730640] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.730707] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730791] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[4.730848] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.730903] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.730958] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.731013] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.731148] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.731209] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.731300] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.731494] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.731562] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.731853] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.731950] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.732007] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.732065] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.732120] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.732190] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.732261] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.732318] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.732374] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[4.732430] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[4.732486] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[4.732542] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[4.732683] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[4.732743] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[4.733023] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[4.733284] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[4.733341] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.733400] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.733458] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.733537] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.733594] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.733653] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.733709] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.733766] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.733821] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[4.733873] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.733925] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.733977] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.734032] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.734167] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.734244] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.734431] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.734537] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.734596] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.734654] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.734735] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.734799] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.734856] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.734912] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.734980] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.735046] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.735111] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.735168] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.735253] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.735307] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.735360] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.735412] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.735465] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.735522] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.735575] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.735627] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.735684] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.735736] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.735787] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.735840] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.735892] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.735943] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.735995] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.736046] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.736108] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[4.736163] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.736229] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.736282] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.736335] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.736388] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.736442] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.736494] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.736552] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.736606] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.736659] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.736713] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.736766] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.736820] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.736873] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.736938] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.736998] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.737054] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.737113] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.737167] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.737238] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.737290] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.737343] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.737395] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.737448] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.737501] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.737553] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.737606] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.737658] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.737711] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.737763] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.737831] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[4.737885] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.737938] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.738000] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.738053] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.738106] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.738158] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.738223] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.738277] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.738330] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.738384] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.738442] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.738497] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.738562] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.738631] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.738702] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.738774] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.738837] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.738899] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.738958] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.739024] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.739094] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.739148] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.739241] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.739337] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.739435] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.739516] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.739577] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.739666] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.739839] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.740024] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.740264] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.740768] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[4.741222] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.741439] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.741749] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.742366] (SurfaceScanner) StderrLine: {'line': b'  128 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[4.742768] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.743069] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.743283] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[4.743427] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.743674] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.743903] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.744135] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.744414] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.744673] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.744938] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.745190] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.745295] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.745378] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.745467] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.745559] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.745652] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.745743] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.745862] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.745956] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.746063] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.746128] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[4.746183] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[4.746257] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[4.746318] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[4.746378] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[4.746439] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[4.746500] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[4.746560] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[4.746622] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.746700] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.746784] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.746868] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.746942] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.747015] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.747086] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.747148] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.747212] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[4.747287] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.747346] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.747405] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.747484] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.747543] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.747601] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.747658] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.747715] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.747774] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.747832] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.747890] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.747947] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.748005] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.748061] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.748134] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.748210] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.748282] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.748332] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.748390] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.748439] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.748489] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.748538] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.748586] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.748635] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.748686] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.748735] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.748792] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.748841] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.748890] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.748939] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.748991] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.749040] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.749089] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.749138] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.749207] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[4.749259] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.749310] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.749361] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.749412] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.749462] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.749515] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.749566] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.749618] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.749669] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.749720] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.749770] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.749821] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.749872] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.749930] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.749992] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.750045] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.750095] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.750147] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.750198] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.750269] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.750324] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.750378] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.750436] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.750490] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.750545] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.750599] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.750653] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.750777] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.750848] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.750907] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.750982] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[4.751042] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.751114] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.751175] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.751246] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.751298] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.751349] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.751401] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.751452] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.751503] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.751554] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.751606] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.751657] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.751708] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.751767] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.751823] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.751892] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.751945] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.751996] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.752047] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.752098] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.752149] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.752200] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.752268] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.752320] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.752372] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.752425] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.752477] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.752530] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.752589] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.752643] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.752697] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.752783] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[4.752841] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.752909] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.752989] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.753064] (SurfaceScanner) StderrLine: {'line': b'  135 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[4.753135] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.753198] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.753310] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[4.753392] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.753464] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.753533] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.753599] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.753669] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.753742] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.753807] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.753871] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.753933] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.753997] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.754073] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.754144] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.754213] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.754307] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.754421] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.754529] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.754641] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.754742] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[4.754802] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[4.754857] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[4.754912] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[4.754968] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[4.755022] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[4.755077] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[4.755130] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[4.755185] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.755239] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.755298] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.755361] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.755432] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.755513] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.755574] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.755630] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.755688] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[4.755743] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.755799] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.755853] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.755911] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.755965] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.756019] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.756074] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.756128] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.756187] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.756252] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.756308] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.756357] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.756408] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.756457] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.756520] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.756580] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.756634] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.756684] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.756745] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.756797] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.756847] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.756896] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.756945] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.756995] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.757044] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.757093] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.757142] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.757191] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.757254] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.757312] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.757366] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.757424] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.757478] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.757532] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.757594] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[4.757649] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.757703] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.757757] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.757815] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.757870] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.757924] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.758008] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.758105] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.758165] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.758219] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.758273] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.758326] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.758379] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.758432] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.758495] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.758549] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.758605] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.758659] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.758766] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.758841] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.758898] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.758958] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.759013] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.759074] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.759129] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.759183] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.759256] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.759317] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.759373] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.759429] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.759499] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[4.759556] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.759612] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.759672] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.759728] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.759784] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.759845] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.759901] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.759957] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.760013] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.760069] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.760126] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.760198] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.760275] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.760327] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.760378] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.760446] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.760498] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.760550] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.760601] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.760652] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.760703] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.760754] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.760809] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.760860] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.760911] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.760961] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.761012] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.761062] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.761113] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.761163] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.761213] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.761299] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[4.761354] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.761407] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.761470] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.761537] (SurfaceScanner) StderrLine: {'line': b'  142 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[4.761591] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.761644] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.761705] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[4.761759] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.761812] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.761865] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.761918] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.761971] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.762024] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.762078] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.762131] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.762186] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.762243] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.762307] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.762356] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.762410] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.762460] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.762526] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.762576] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.762626] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.762676] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[4.762768] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[4.762819] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[4.762870] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[4.762920] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[4.762970] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[4.763020] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[4.763134] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[4.763186] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.763256] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.763314] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.763389] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.763448] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.763517] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.763577] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.763632] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.763695] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[4.763749] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.763804] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.763859] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.763913] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.763967] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.764022] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.764078] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.764133] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.764187] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.764241] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.764300] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.764355] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.764409] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.764463] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.764521] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.764590] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.764653] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.764707] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.764778] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.764833] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.764886] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.764944] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.765000] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.765057] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.765111] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.765165] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.765219] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.765283] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.765333] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.765383] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.765438] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.765489] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.765539] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.765590] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.765649] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[4.765704] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.765756] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.765807] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.765858] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.765908] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.765959] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.766010] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.766060] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.766111] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.766161] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.766211] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.766261] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.766312] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.766362] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.766431] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.766483] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.766534] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.766585] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.766637] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.766729] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.766809] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.766863] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.766915] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.766967] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.767018] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.767070] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.767131] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.767190] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.767256] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.767310] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.767382] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[4.767437] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.767491] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.767558] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.767613] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.767667] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.767721] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.767775] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.767828] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.767881] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.767935] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.767988] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.768041] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.768094] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.768148] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.768201] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.768286] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[4.768337] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.768387] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.768439] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[4.768491] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[4.768542] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.768592] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.768643] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.768701] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.768752] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.768802] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.768854] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.768905] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.768955] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.769011] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.769063] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.769127] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[4.769191] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.769244] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.769309] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99)\n'}
[4.769373] (SurfaceScanner) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[4.769427] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.769480] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[4.769533] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[4.769586] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[4.769639] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[4.769692] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[4.769753] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[4.769806] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[4.769859] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[4.769912] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[4.769964] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[4.770017] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[4.770070] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.770123] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.770185] (SurfaceScanner) StderrLine: {'line': b' 1477 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[4.770239] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.770296] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.770349] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = void (RPI_Camera_node::*&&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.770417] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1473:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.770524] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.770587] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.770647] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.770718] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.770774] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1391:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.770829] (SurfaceScanner) StderrLine: {'line': b' 1391 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[4.770882] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.770940] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.771006] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771064] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771124] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[4.771179] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771248] (SurfaceScanner) StderrLine: {'line': b' 1414 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[4.771299] (SurfaceScanner) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.771350] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771414] (SurfaceScanner) StderrLine: {'line': b' 1414 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[4.771471] (SurfaceScanner) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.771523] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771579] (SurfaceScanner) StderrLine: {'line': b' 1415 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[4.771629] (SurfaceScanner) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.771681] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771741] (SurfaceScanner) StderrLine: {'line': b' 1415 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[4.771792] (SurfaceScanner) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.814146] (-) TimerEvent: {}
[4.914416] (-) TimerEvent: {}
[5.014733] (-) TimerEvent: {}
[5.115050] (-) TimerEvent: {}
[5.215387] (-) TimerEvent: {}
[5.259639] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[5.259910] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[5.260043] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/unordered_map:40\x1b[m\x1b[K,\n'}
[5.260148] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/functional:61\x1b[m\x1b[K,\n'}
[5.260271] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[5.260372] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[5.260470] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:55\x1b[m\x1b[K,\n'}
[5.260568] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[5.260665] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[5.260760] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[5.260857] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.260953] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = RPI_Camera_node; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.261054] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = RPI_Camera_node; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<RPI_Camera_node>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261170] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261281] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261381] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261488] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:409:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261596] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:862:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261706] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:878:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = RPI_Camera_node; _Args = {const char (&)[16]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261803] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:125:55:\x1b[m\x1b[K   required from here\n'}
[5.261902] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node(const char [16])\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.261999] (SurfaceScanner) StderrLine: {'line': b'  162 |         { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[5.262094] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.262190] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.262285] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:17:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node()\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.262382] (SurfaceScanner) StderrLine: {'line': b'   17 |   public: \x1b[01;36m\x1b[KRPI_Camera_node\x1b[m\x1b[K() : Node("camera_node"){\n'}
[5.262476] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.262569] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:17:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[5.315485] (-) TimerEvent: {}
[5.396866] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.397364] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.397557] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.397738] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.397914] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:13:44:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_rotMat\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.398112] (SurfaceScanner) StderrLine: {'line': b'   13 |     cv::Mat m_originalImg, m_imgWithLaser, \x1b[01;35m\x1b[Km_rotMat\x1b[m\x1b[K, m_mask;\n'}
[5.398284] (SurfaceScanner) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.398623] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:29:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_tVec\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.398846] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat m_ImgDiffLaser, \x1b[01;35m\x1b[Km_tVec\x1b[m\x1b[K, m_laserPoints;\n'}
[5.399021] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.399191] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.399367] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.399527] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.399662] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.399802] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[5.399928] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.400049] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.400173] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.400308] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.400424] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:13:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_mask\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.400547] (SurfaceScanner) StderrLine: {'line': b'   13 |     cv::Mat m_originalImg, m_imgWithLaser, m_rotMat, \x1b[01;35m\x1b[Km_mask\x1b[m\x1b[K;\n'}
[5.400668] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.400785] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_ImgDiffLaser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.400914] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;35m\x1b[Km_ImgDiffLaser\x1b[m\x1b[K, m_tVec, m_laserPoints;\n'}
[5.401037] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.401181] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.401329] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.401469] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.401610] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.401755] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[5.401903] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.402055] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.402316] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.402736] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.402922] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:\x1b[m\x1b[K In copy constructor \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.403028] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:13:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_mask\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.403130] (SurfaceScanner) StderrLine: {'line': b'   13 |     cv::Mat m_originalImg, m_imgWithLaser, m_rotMat, \x1b[01;35m\x1b[Km_mask\x1b[m\x1b[K;\n'}
[5.403213] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.403296] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_ImgDiffLaser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.403382] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;35m\x1b[Km_ImgDiffLaser\x1b[m\x1b[K, m_tVec, m_laserPoints;\n'}
[5.403467] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.403545] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.403623] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.403706] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.403783] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:43:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.403867] (SurfaceScanner) StderrLine: {'line': b'   43 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[5.403949] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.404027] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.404105] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.404186] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.404265] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:\x1b[m\x1b[K At global scope:\n'}
[5.404345] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:4:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kconst cv::Mat defaultMat\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.404435] (SurfaceScanner) StderrLine: {'line': b'    4 | const cv::Mat \x1b[01;31m\x1b[KdefaultMat\x1b[m\x1b[K = cv::Mat();//cv::Mat::zeros(cv::Size(3,3), CV_8U);\n'}
[5.404538] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.404618] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.404697] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.404773] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.404872] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.404955] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:4:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst cv::Mat defaultMat\x1b[m\x1b[K\xe2\x80\x99 previously declared here\n'}
[5.405034] (SurfaceScanner) StderrLine: {'line': b'    4 | const cv::Mat \x1b[01;36m\x1b[KdefaultMat\x1b[m\x1b[K = cv::Mat();//cv::Mat::zeros(cv::Size(3,3), CV_8U);\n'}
[5.405109] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.405183] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.405259] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.405348] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.405431] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:12:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::getLinePixels(cv::InputArray)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.405517] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;31m\x1b[KgetLinePixels\x1b[m\x1b[K(cv::InputArray diffImg){\n'}
[5.405602] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.405681] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.405759] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.405839] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.405921] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.405999] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:12:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::getLinePixels(cv::InputArray)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.406079] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;36m\x1b[KgetLinePixels\x1b[m\x1b[K(cv::InputArray diffImg){\n'}
[5.406156] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.407252] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.407392] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.407618] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.407731] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:93:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::world2cam(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.407813] (SurfaceScanner) StderrLine: {'line': b'   93 |     cv::Mat \x1b[01;31m\x1b[Kworld2cam\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[5.407895] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.408037] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.408117] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.408193] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.408338] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.408409] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:93:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::world2cam(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.408482] (SurfaceScanner) StderrLine: {'line': b'   93 |     cv::Mat \x1b[01;36m\x1b[Kworld2cam\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[5.408551] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.408620] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.408689] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.408757] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.408826] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:97:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::cam2world(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.408895] (SurfaceScanner) StderrLine: {'line': b'   97 |     cv::Mat \x1b[01;31m\x1b[Kcam2world\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[5.408964] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.409032] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.409099] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.409176] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.409258] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.409330] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:97:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::cam2world(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.409403] (SurfaceScanner) StderrLine: {'line': b'   97 |     cv::Mat \x1b[01;36m\x1b[Kcam2world\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[5.409471] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.409536] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.409602] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.409675] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.409819] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:107:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::bild2world(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409893] (SurfaceScanner) StderrLine: {'line': b'  107 |     cv::Mat \x1b[01;31m\x1b[Kbild2world\x1b[m\x1b[K(cv::Mat pts, cv::Mat transVec, cv::Mat rotMatrix, cv::Mat cam_matrix, cv::Mat plane=defaultMat){\n'}
[5.409964] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.410035] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.410108] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.410180] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.410252] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.410325] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:107:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::bild2world(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.410402] (SurfaceScanner) StderrLine: {'line': b'  107 |     cv::Mat \x1b[01;36m\x1b[Kbild2world\x1b[m\x1b[K(cv::Mat pts, cv::Mat transVec, cv::Mat rotMatrix, cv::Mat cam_matrix, cv::Mat plane=defaultMat){\n'}
[5.410476] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.410548] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.410620] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.410705] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.410961] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:131:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::planeFitWithSvd(const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.411039] (SurfaceScanner) StderrLine: {'line': b'  131 |     cv::Mat \x1b[01;31m\x1b[KplaneFitWithSvd\x1b[m\x1b[K(const cv::Mat &points){\n'}
[5.411116] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.411197] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[5.411292] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.411364] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.411493] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.411561] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:131:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::planeFitWithSvd(const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.411821] (SurfaceScanner) StderrLine: {'line': b'  131 |     cv::Mat \x1b[01;36m\x1b[KplaneFitWithSvd\x1b[m\x1b[K(const cv::Mat &points){\n'}
[5.411891] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.411959] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.412201] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.412341] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:9:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kclass LaserLine\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.412407] (SurfaceScanner) StderrLine: {'line': b'    9 | class \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K\n'}
[5.412470] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.412532] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.412595] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.412659] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.412723] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:9:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious definition of \xe2\x80\x98\x1b[01m\x1b[Kclass LaserLine\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.412786] (SurfaceScanner) StderrLine: {'line': b'    9 | class \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K\n'}
[5.412849] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.412911] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.412975] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.413039] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.413105] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[5.413171] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.413235] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.413308] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.413373] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.413437] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.413503] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[5.413567] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.413631] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.413695] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.413759] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:43:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.413823] (SurfaceScanner) StderrLine: {'line': b'   43 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[5.413886] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.413949] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.414014] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.414077] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.414148] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:43:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.414222] (SurfaceScanner) StderrLine: {'line': b'   43 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[5.414294] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.414359] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.414424] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.414488] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::~LaserLine()\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.414560] (SurfaceScanner) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::~LaserLine(){\n'}
[5.414625] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.414702] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.414774] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.414838] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.414900] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::~LaserLine()\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.414965] (SurfaceScanner) StderrLine: {'line': b'   61 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::~LaserLine(){\n'}
[5.415027] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.415090] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.415153] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.415216] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:65:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_laserPoints() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.415280] (SurfaceScanner) StderrLine: {'line': b'   65 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_laserPoints() const{\n'}
[5.415345] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.415408] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.415468] (-) TimerEvent: {}
[5.415581] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.415660] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.415725] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:65:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_laserPoints() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.415792] (SurfaceScanner) StderrLine: {'line': b'   65 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_laserPoints() const{\n'}
[5.415854] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.415916] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.415979] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.416055] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:69:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_rotMatrix() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416119] (SurfaceScanner) StderrLine: {'line': b'   69 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_rotMatrix() const{\n'}
[5.416182] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.416250] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.416318] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.416412] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.416503] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:69:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_rotMatrix() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.416583] (SurfaceScanner) StderrLine: {'line': b'   69 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_rotMatrix() const{\n'}
[5.416651] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.416718] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.416792] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.416859] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:73:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_tVec() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416927] (SurfaceScanner) StderrLine: {'line': b'   73 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_tVec() const{\n'}
[5.416994] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.417058] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.417120] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.417183] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.417246] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:73:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_tVec() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.417309] (SurfaceScanner) StderrLine: {'line': b'   73 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_tVec() const{\n'}
[5.417372] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.417435] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[5.417505] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.417567] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:77:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine& LaserLine::operator=(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.417631] (SurfaceScanner) StderrLine: {'line': b'   77 | LaserLine &\x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::operator=(const LaserLine &other){\n'}
[5.417718] (SurfaceScanner) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.417830] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[5.417937] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[5.418029] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.418094] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:77:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine& LaserLine::operator=(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[5.418159] (SurfaceScanner) StderrLine: {'line': b'   77 | LaserLine &\x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::operator=(const LaserLine &other){\n'}
[5.418221] (SurfaceScanner) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.428227] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:3\x1b[m\x1b[K,\n'}
[5.428379] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[5.428447] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/rpi_camera.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Camera::calibrate_Camera()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.428510] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/rpi_camera.hpp:83:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::__cxx11::basic_string<char> >::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\x07-Wsign-compare\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.428588] (SurfaceScanner) StderrLine: {'line': b'   83 |     for (int i = 0; \x1b[01;35m\x1b[Ki < images.size()\x1b[m\x1b[K; i++)\n'}
[5.428650] (SurfaceScanner) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.515869] (-) TimerEvent: {}
[5.616329] (-) TimerEvent: {}
[5.716782] (-) TimerEvent: {}
[5.817075] (-) TimerEvent: {}
[5.917439] (-) TimerEvent: {}
[5.989754] (SurfaceScanner) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/camera_node.dir/build.make:76: CMakeFiles/camera_node.dir/src/camera_node.cpp.o] Error 1\n'}
[5.990028] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/camera_node.dir/all] Error 2\n'}
[5.990141] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** Waiting for unfinished jobs....\n'}
[6.017543] (-) TimerEvent: {}
[6.117883] (-) TimerEvent: {}
[6.218195] (-) TimerEvent: {}
[6.318527] (-) TimerEvent: {}
[6.418887] (-) TimerEvent: {}
[6.519263] (-) TimerEvent: {}
[6.619631] (-) TimerEvent: {}
[6.719941] (-) TimerEvent: {}
[6.820175] (-) TimerEvent: {}
[6.920435] (-) TimerEvent: {}
[6.948446] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.948648] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KScanner::Scanner()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.948757] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:61:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KScanner::m_Calibrated\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.948848] (SurfaceScanner) StderrLine: {'line': b'   61 |     bool \x1b[01;35m\x1b[Km_Calibrated\x1b[m\x1b[K;\n'}
[6.948932] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.949001] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:60:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KLaser Scanner::m_Laser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.949056] (SurfaceScanner) StderrLine: {'line': b'   60 |     Laser \x1b[01;35m\x1b[Km_Laser\x1b[m\x1b[K;\n'}
[6.949106] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.949155] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:71:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.949208] (SurfaceScanner) StderrLine: {'line': b'   71 | \x1b[01;35m\x1b[KScanner\x1b[m\x1b[K::Scanner(): m_Calibrated(false), m_Laser(Laser()), m_Camera(Camera()), m_CurrentSurface(new pcl::PointCloud<pcl::PointXYZRGB>()){\n'}
[6.949259] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.952724] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Scanner::calibrateScanner(const std::vector<cv::Mat>&, const cv::Mat&, const cv::Mat&, const bool&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.952855] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:123:60:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kimages\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.952915] (SurfaceScanner) StderrLine: {'line': b'  123 | void Scanner::calibrateScanner(\x1b[01;35m\x1b[Kconst std::vector<cv::Mat> &images\x1b[m\x1b[K, const cv::Mat &calibration_img, const cv::Mat &calibration_img_laser, const bool &safe_data_in_npz){\n'}
[6.952968] (SurfaceScanner) StderrLine: {'line': b'      |                                \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[6.953030] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:123:150:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksafe_data_in_npz\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.953084] (SurfaceScanner) StderrLine: {'line': b'  123 | void Scanner::calibrateScanner(const std::vector<cv::Mat> &images, const cv::Mat &calibration_img, const cv::Mat &calibration_img_laser, \x1b[01;35m\x1b[Kconst bool &safe_data_in_npz\x1b[m\x1b[K){\n'}
[6.953135] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                                                                          \x1b[01;35m\x1b[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.963821] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.964006] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::tuple<bool, cv::Mat, cv::Mat, cv::Mat> Scanner::get_pose_in_charuco_board(cv::Ptr<cv::aruco::DetectorParameters>, cv::Ptr<cv::aruco::Board>, cv::Ptr<cv::aruco::Dictionary>, const cv::Mat&, const bool&) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.964070] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kcharuco_retval\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\x07-Wunused-variable\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.964130] (SurfaceScanner) StderrLine: {'line': b'  146 |         bool \x1b[01;35m\x1b[Kcharuco_retval\x1b[m\x1b[K = cv::aruco::interpolateCornersCharuco(corners, ids, img, &board, charuco_corners, charuco_ids);\n'}
[6.964182] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.975234] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool Scanner::calibrateLaser(const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.975412] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:241:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Km_laser\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Km_Laser\x1b[m\x1b[K\xe2\x80\x99?\n'}
[6.975473] (SurfaceScanner) StderrLine: {'line': b'  241 |     \x1b[01;31m\x1b[Km_laser\x1b[m\x1b[K.set_up(LaserLine(charuco_board, charuco_board_laser, std::get<1>(poseFirstBoard), std::get<2>(poseFirstBoard), std::get<3>(poseFirstBoard)));\n'}
[6.975526] (SurfaceScanner) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.975577] (SurfaceScanner) StderrLine: {'line': b'      |     \x1b[32m\x1b[Km_Laser\x1b[m\x1b[K\n'}
[6.978272] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Scanner::updatePcd(const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.978400] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:263:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksurface_koords\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.978470] (SurfaceScanner) StderrLine: {'line': b'  263 | void Scanner::updatePcd(\x1b[01;35m\x1b[Kconst cv::Mat &surface_koords\x1b[m\x1b[K, const cv::Mat &point_colors){\n'}
[6.978523] (SurfaceScanner) StderrLine: {'line': b'      |                         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.978574] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:263:71:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpoint_colors\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.978627] (SurfaceScanner) StderrLine: {'line': b'  263 | void Scanner::updatePcd(const cv::Mat &surface_koords, \x1b[01;35m\x1b[Kconst cv::Mat &point_colors\x1b[m\x1b[K){\n'}
[6.978676] (SurfaceScanner) StderrLine: {'line': b'      |                                                        \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.020564] (-) TimerEvent: {}
[7.120906] (-) TimerEvent: {}
[7.169464] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::SurfaceScannerNode()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.169705] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:39:43:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_service(const char [18], void (SurfaceScannerNode::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.169804] (SurfaceScanner) StderrLine: {'line': b'   39 |     m_calibrateScannerSrv = \x1b[01;31m\x1b[Kcreate_service("calibrate_scanner", &SurfaceScannerNode::calibrateScannerSrvCallback)\x1b[m\x1b[K;\n'}
[7.169876] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.169931] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.170012] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.170097] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.170183] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.170271] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.170363] (SurfaceScanner) StderrLine: {'line': b'  267 |   \x1b[01;36m\x1b[Kcreate_service\x1b[m\x1b[K(\n'}
[7.170420] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.170471] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.170531] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:39:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KServiceT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.170589] (SurfaceScanner) StderrLine: {'line': b'   39 |     m_calibrateScannerSrv = \x1b[01;36m\x1b[Kcreate_service("calibrate_scanner", &SurfaceScannerNode::calibrateScannerSrvCallback)\x1b[m\x1b[K;\n'}
[7.170640] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.170706] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:41:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_service(const char [22], void (SurfaceScannerNode::*)(std::shared_ptr<interfaces::srv::CalibrateLaserImport_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::CalibrateLaserImport_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.170766] (SurfaceScanner) StderrLine: {'line': b'   41 |     m_calibrateLaserWithImportSrv = \x1b[01;31m\x1b[Kcreate_service("calibrate_with_import", &SurfaceScannerNode::calibrateWithImportSrvCallback)\x1b[m\x1b[K;\n'}
[7.170817] (SurfaceScanner) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.170891] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.170978] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.171071] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.171167] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.171264] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.171341] (SurfaceScanner) StderrLine: {'line': b'  267 |   \x1b[01;36m\x1b[Kcreate_service\x1b[m\x1b[K(\n'}
[7.171404] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.171468] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.171522] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:41:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KServiceT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.171574] (SurfaceScanner) StderrLine: {'line': b'   41 |     m_calibrateLaserWithImportSrv = \x1b[01;36m\x1b[Kcreate_service("calibrate_with_import", &SurfaceScannerNode::calibrateWithImportSrvCallback)\x1b[m\x1b[K;\n'}
[7.171626] (SurfaceScanner) StderrLine: {'line': b'      |                                     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.175229] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:43:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_subscription(const char [9], int, std::_Bind_helper<false, void (SurfaceScannerNode::*)(const interfaces::msg::ImagePair_<std::allocator<void> >&), SurfaceScannerNode*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.175369] (SurfaceScanner) StderrLine: {'line': b'   43 |     imgPairSub = \x1b[01;31m\x1b[Kcreate_subscription("img_pair", 10, std::bind(&SurfaceScannerNode::imagePairCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.175432] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.175486] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.175539] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.175590] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.175640] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.175690] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.175749] (SurfaceScanner) StderrLine: {'line': b'  219 |   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[7.175798] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.175851] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.175901] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:43:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KMessageT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.175952] (SurfaceScanner) StderrLine: {'line': b'   43 |     imgPairSub = \x1b[01;36m\x1b[Kcreate_subscription("img_pair", 10, std::bind(&SurfaceScannerNode::imagePairCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.176002] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.176663] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:45:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_subscription(const char [15], int, std::_Bind_helper<false, void (SurfaceScannerNode::*)(const interfaces::msg::CameraCalibrationImgs_<std::allocator<void> >&), SurfaceScannerNode*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.176760] (SurfaceScanner) StderrLine: {'line': b'   45 |     camCalibrateImgsSub = \x1b[01;31m\x1b[Kcreate_subscription("cam_calib_imgs", 10, std::bind(&SurfaceScannerNode::camCalibImgsCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.176820] (SurfaceScanner) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.176876] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.176929] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.176980] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.177031] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.177081] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.177135] (SurfaceScanner) StderrLine: {'line': b'  219 |   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[7.177193] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.177243] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.177305] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:45:46:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KMessageT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.177354] (SurfaceScanner) StderrLine: {'line': b'   45 |     camCalibrateImgsSub = \x1b[01;36m\x1b[Kcreate_subscription("cam_calib_imgs", 10, std::bind(&SurfaceScannerNode::camCalibImgsCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.177402] (SurfaceScanner) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.183680] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SurfaceScannerNode::calibrateScannerSrvCallback(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.183827] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:60:109:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.183898] (SurfaceScanner) StderrLine: {'line': b'   60 | void SurfaceScannerNode::calibrateScannerSrvCallback(\x1b[01;35m\x1b[Kconst std::shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K, std::shared_ptr<std_srvs::srv::Trigger::Response> response){\n'}
[7.183957] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[7.221005] (-) TimerEvent: {}
[7.321337] (-) TimerEvent: {}
[7.421664] (-) TimerEvent: {}
[7.521962] (-) TimerEvent: {}
[7.615614] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.616158] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.616388] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.616446] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.616499] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.616550] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.616959] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.617303] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.617363] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[7.617415] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::Dictionary>::shared_ptr(cv::Ptr<cv::aruco::Dictionary>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.617467] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.617516] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[7.617564] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.617614] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.617662] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.617711] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.617769] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[7.617819] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.617871] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.617920] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.617971] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.618293] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.618825] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.618896] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.618953] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.619007] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.619062] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.619120] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.619174] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.619231] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.619333] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.619409] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.619472] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[7.619536] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.619595] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.619682] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.619765] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.619833] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.619896] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.619952] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.620009] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.620083] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.620140] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.620196] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.620269] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.620329] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.620389] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.620449] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.620512] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[7.620579] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.620640] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.620700] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.620780] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.620887] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.620998] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.621103] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.621195] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.621275] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.621354] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.621408] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.621461] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.621513] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.621583] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.621635] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.621690] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[7.621742] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.621799] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.621852] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.621904] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.621952] (-) TimerEvent: {}
[7.622037] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.622119] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.622197] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.622260] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.622334] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.622394] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.622453] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.622510] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.622571] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.622671] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.622755] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.622818] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[7.622873] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.622930] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.623001] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.623058] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.623114] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.623169] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.623242] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.623302] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.623364] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.623427] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.623486] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.623545] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.623606] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.623665] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.623725] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.623789] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[7.623849] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.623908] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.623969] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.624028] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.624089] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.624148] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.624214] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.624277] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.624359] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.624429] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.624483] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.624537] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.624590] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.624643] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.624697] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.624753] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[7.624807] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.624860] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.624914] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.624973] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.625026] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.625080] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.625133] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.625187] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.625240] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.625305] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.625355] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.625405] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.625455] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.625506] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.625561] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.625613] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[7.625664] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.625713] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.625764] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.625814] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.625864] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.625914] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.625965] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.626016] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.626067] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[7.626124] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.626174] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.626225] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.626275] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.626330] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.626381] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.626435] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[7.626486] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.626535] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.626586] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.626641] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.626710] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.626782] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.626846] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.626922] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.627005] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[7.627070] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.627122] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.627172] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.627223] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.627273] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.627325] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.627378] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[7.627429] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.627479] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.627529] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.627579] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.627629] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.627679] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.627729] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.627779] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.627829] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.627879] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.627929] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.627985] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.628035] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.628085] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.628136] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.628195] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[7.628245] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.628299] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.628350] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.628401] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.628451] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.628501] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.628551] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.628601] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.628656] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.628707] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.628761] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.628811] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.628860] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.628910] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.628961] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.629013] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[7.629068] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.629117] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.629168] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::Dictionary>*}; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.629221] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.629285] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.629333] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[7.629382] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.629430] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[7.629478] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.629525] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.629575] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.629624] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[7.629671] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.629725] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[7.629777] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.629825] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.629878] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::Dictionary; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.629933] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[7.629985] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.630033] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.630082] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[7.630129] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.630177] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.630226] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[7.630273] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.630320] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::Dictionary>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.630370] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[7.630417] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.630465] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.630513] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[7.630563] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.630610] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::Dictionary>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.630660] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[7.630720] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.630770] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.630819] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[7.630867] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.630915] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.630969] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.631017] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.631065] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.631114] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.631163] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.631211] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.631276] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.631331] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.631391] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[7.631444] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::DetectorParameters>::shared_ptr(cv::Ptr<cv::aruco::DetectorParameters>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.631507] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.631560] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[7.631612] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.631664] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.631717] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.631769] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.631825] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[7.631878] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.631930] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.631988] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.632040] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.632093] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.632146] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.632197] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.632253] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.632316] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.632367] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.632416] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.632465] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.632514] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.632562] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.632611] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.632664] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[7.632713] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.632761] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.632810] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.632859] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.632907] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.632956] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.633004] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.633055] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.633105] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.633166] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.633220] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.633288] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.633346] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.633401] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.633455] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.633512] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[7.633565] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.633618] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.633671] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.633723] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.633775] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.633827] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.633879] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.633939] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.633992] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.634046] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.634099] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.634152] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.634206] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.634271] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.634325] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.634378] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[7.634427] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.634477] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.634526] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.634575] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.634624] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.634673] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.634734] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.634786] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.634835] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.634886] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.634935] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.634989] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.635039] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.635093] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.635142] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.635201] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[7.635263] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.635313] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.635363] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.635419] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.635470] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.635520] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.635572] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.635624] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.635679] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.635733] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.635787] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.635864] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.635925] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.635977] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.636030] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.636088] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[7.636141] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.636194] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.636247] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.636318] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.636396] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.636490] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.636552] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.636625] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.636694] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.636761] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.636815] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.636869] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.636927] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.636981] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.637037] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.637100] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[7.637156] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.637209] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.637293] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.637352] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.637409] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.637469] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.637565] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.637669] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.637780] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.637883] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.637958] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.638021] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.638083] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.638143] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.638220] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.638285] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[7.638354] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.638403] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.638454] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.638503] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.638551] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.638600] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.638650] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.638716] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.638767] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[7.638821] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.638903] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.638964] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.639016] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.639067] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.639132] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.639190] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[7.639242] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.639314] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.639372] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.639439] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.639505] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.639563] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.639621] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.639686] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.639744] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[7.639805] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.639862] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.639920] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.639978] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.640035] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.640093] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.640155] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[7.640212] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.640283] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.640337] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.640391] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.640446] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.640501] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.640555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.640613] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.640670] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.640728] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.640783] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.640847] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.640902] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.640957] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.641013] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.641086] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[7.641150] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.641203] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.641254] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.641324] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.641381] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.641435] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.641489] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.641543] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.641598] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.641658] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.641712] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.641767] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.641825] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.641880] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.641935] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.641993] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[7.642048] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.642108] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.642163] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::DetectorParameters>*}; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.642223] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.642293] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.642341] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[7.642390] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.642439] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[7.642486] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.642533] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.642582] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.642635] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[7.642683] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.642763] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[7.642825] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.642905] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.642972] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::DetectorParameters; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.643028] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[7.643076] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.643124] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.643179] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[7.643227] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.643294] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.643348] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[7.643399] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.643448] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::DetectorParameters>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.643500] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[7.643549] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.643598] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.643648] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[7.643697] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.643746] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::DetectorParameters>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.643797] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[7.643846] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.643895] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.643944] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[7.643995] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.644048] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.644098] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.644146] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.644195] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.644243] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.644309] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.644363] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.644414] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.644466] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.644517] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:67:\x1b[m\x1b[K   required from here\n'}
[7.644568] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::CharucoBoard>::shared_ptr(cv::Ptr<cv::aruco::Board>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.644619] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.644671] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[7.644724] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.644775] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.644828] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.644878] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.644936] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[7.644991] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.645042] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.645096] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.645146] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.645196] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.645245] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.645294] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.645344] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.645395] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.645446] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.645496] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.645547] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.645597] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.645650] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.645700] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.645754] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[7.645805] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.645859] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.645911] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.645962] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.646012] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.646062] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.646111] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.646162] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.646212] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.646278] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.646326] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.646373] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.646420] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.646469] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.646516] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.646566] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[7.646613] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.646661] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.646729] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.646779] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.646827] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.646881] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.646928] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.646976] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.647024] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.647073] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.647120] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.647168] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.647215] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.647285] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.647347] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.647407] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[7.647463] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.647519] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.647584] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.647643] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.647709] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.647775] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.647833] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.647891] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.647949] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.648018] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.648081] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.648141] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.648199] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.648261] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.648328] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.648385] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[7.648439] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.648492] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.648546] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.648612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.648696] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.648752] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.648813] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.648868] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.648923] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.648987] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.649040] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.649095] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.649147] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.649204] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.649276] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.649351] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[7.649413] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.649474] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.649536] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.649602] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.649673] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.649734] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.649794] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.649855] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.649915] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.649982] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.650040] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.650098] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.650156] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.650217] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.650288] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.650343] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[7.650395] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.650447] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.650498] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.650552] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.650604] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.650656] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.650725] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.650781] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.650834] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.650899] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.650953] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.651005] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.651058] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.651118] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.651172] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.651248] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[7.651299] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.651350] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.651401] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.651450] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.651501] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.651551] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.651605] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.651657] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.651708] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[7.651759] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.651809] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.651860] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.651911] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.651962] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.652013] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.652068] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[7.652119] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.652169] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.652220] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.652270] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.652320] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.652375] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.652426] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.652476] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.652526] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[7.652582] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.652636] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.652698] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.652781] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.652839] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.652913] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.652980] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[7.653063] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.653168] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.653268] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.653333] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.653398] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.653466] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.653531] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.653592] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.653668] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.653730] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.653787] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.653843] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.653907] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.653964] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.654022] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.654083] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[7.654138] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.654192] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.654266] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[7.654327] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[7.654400] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[7.654465] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[7.654540] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[7.654645] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[7.654782] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.654904] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[7.655013] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[7.655094] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[7.655158] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.655221] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.655285] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.655359] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[7.655409] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.655458] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.655534] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::Board>*}; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.655599] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.655657] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.655716] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:67:\x1b[m\x1b[K   required from here\n'}
[7.655780] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.655850] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[7.655904] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.655956] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.656011] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.656066] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:67:\x1b[m\x1b[K   required from here\n'}
[7.656121] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.656178] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[7.656237] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.656310] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[7.656371] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::CharucoBoard; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.656433] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[7.656493] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.656563] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.656622] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[7.656679] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.656735] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.656791] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[7.656845] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.656899] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::CharucoBoard>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.656957] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[7.657012] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.657067] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.657125] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[7.657181] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.657236] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::CharucoBoard>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.657305] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[7.657368] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.657440] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.657524] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[7.657591] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.657653] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.722063] (-) TimerEvent: {}
[7.822409] (-) TimerEvent: {}
[7.922769] (-) TimerEvent: {}
[8.023042] (-) TimerEvent: {}
[8.123335] (-) TimerEvent: {}
[8.223614] (-) TimerEvent: {}
[8.323890] (-) TimerEvent: {}
[8.424179] (-) TimerEvent: {}
[8.524459] (-) TimerEvent: {}
[8.624764] (-) TimerEvent: {}
[8.725118] (-) TimerEvent: {}
[8.825477] (-) TimerEvent: {}
[8.925820] (-) TimerEvent: {}
[9.026117] (-) TimerEvent: {}
[9.067856] (SurfaceScanner) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/surface_scanner_node.dir/build.make:76: CMakeFiles/surface_scanner_node.dir/src/SurfaceScannerNode.cpp.o] Error 1\n'}
[9.068073] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/surface_scanner_node.dir/all] Error 2\n'}
[9.068255] (SurfaceScanner) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[9.070107] (SurfaceScanner) CommandEnded: {'returncode': 2}
[9.098477] (SurfaceScanner) JobEnded: {'identifier': 'SurfaceScanner', 'rc': 2}
[9.116872] (-) EventReactorShutdown: {}
