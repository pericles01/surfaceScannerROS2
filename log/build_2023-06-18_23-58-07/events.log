[0.000000] (-) TimerEvent: {}
[0.000127] (interfaces) JobQueued: {'identifier': 'interfaces', 'dependencies': OrderedDict()}
[0.000175] (SurfaceScanner) JobQueued: {'identifier': 'SurfaceScanner', 'dependencies': OrderedDict([('interfaces', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces')])}
[0.000449] (interfaces) JobStarted: {'identifier': 'interfaces'}
[0.007857] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'cmake'}
[0.009257] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'build'}
[0.009318] (interfaces) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', '--', '-j8', '-l8'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble')]), 'shell': False}
[0.046392] (interfaces) StdoutLine: {'line': b'[  2%] Built target interfaces__cpp\n'}
[0.046660] (interfaces) StdoutLine: {'line': b'[ 12%] Built target interfaces__rosidl_generator_c\n'}
[0.056737] (interfaces) StdoutLine: {'line': b'[ 12%] Built target ament_cmake_python_copy_interfaces\n'}
[0.069030] (interfaces) StdoutLine: {'line': b'[ 23%] Built target interfaces__rosidl_typesupport_cpp\n'}
[0.069544] (interfaces) StdoutLine: {'line': b'[ 36%] Built target interfaces__rosidl_typesupport_fastrtps_cpp\n'}
[0.069698] (interfaces) StdoutLine: {'line': b'[ 44%] Built target interfaces__rosidl_typesupport_introspection_cpp\n'}
[0.078218] (interfaces) StdoutLine: {'line': b'[ 55%] Built target interfaces__rosidl_typesupport_c\n'}
[0.078815] (interfaces) StdoutLine: {'line': b'[ 65%] Built target interfaces__rosidl_typesupport_introspection_c\n'}
[0.080679] (interfaces) StdoutLine: {'line': b'[ 76%] Built target interfaces__rosidl_typesupport_fastrtps_c\n'}
[0.093804] (interfaces) StdoutLine: {'line': b'[ 76%] Built target interfaces\n'}
[0.098653] (-) TimerEvent: {}
[0.108197] (interfaces) StdoutLine: {'line': b'[ 78%] Built target interfaces__py\n'}
[0.124286] (interfaces) StdoutLine: {'line': b'[ 87%] Built target interfaces__rosidl_generator_py\n'}
[0.142796] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_introspection_c__pyext\n'}
[0.143078] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_fastrtps_c__pyext\n'}
[0.143223] (interfaces) StdoutLine: {'line': b'[100%] Built target interfaces__rosidl_typesupport_c__pyext\n'}
[0.198752] (-) TimerEvent: {}
[0.299290] (-) TimerEvent: {}
[0.399678] (-) TimerEvent: {}
[0.434262] (interfaces) StdoutLine: {'line': b'running egg_info\n'}
[0.451859] (interfaces) StdoutLine: {'line': b'writing interfaces.egg-info/PKG-INFO\n'}
[0.452078] (interfaces) StdoutLine: {'line': b'writing dependency_links to interfaces.egg-info/dependency_links.txt\n'}
[0.452280] (interfaces) StdoutLine: {'line': b'writing top-level names to interfaces.egg-info/top_level.txt\n'}
[0.499810] (-) TimerEvent: {}
[0.518647] (interfaces) StdoutLine: {'line': b"reading manifest file 'interfaces.egg-info/SOURCES.txt'\n"}
[0.519484] (interfaces) StdoutLine: {'line': b"writing manifest file 'interfaces.egg-info/SOURCES.txt'\n"}
[0.579346] (interfaces) StdoutLine: {'line': b'[100%] Built target ament_cmake_python_build_interfaces_egg\n'}
[0.591814] (interfaces) CommandEnded: {'returncode': 0}
[0.599949] (-) TimerEvent: {}
[0.668008] (interfaces) JobProgress: {'identifier': 'interfaces', 'progress': 'install'}
[0.675142] (interfaces) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble')]), 'shell': False}
[0.682006] (interfaces) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.682361] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/rosidl_interfaces/interfaces\n'}
[0.682591] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.682714] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.682786] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.682856] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__functions.h\n'}
[0.682921] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.h\n'}
[0.682983] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__functions.c\n'}
[0.683076] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__struct.h\n'}
[0.683139] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/calibrate_laser_import.h\n'}
[0.683204] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.683346] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/image_pair.h\n'}
[0.683419] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_generator_c__visibility_control.h\n'}
[0.683533] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.683596] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__functions.c\n'}
[0.683660] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__struct.h\n'}
[0.683721] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__struct.h\n'}
[0.683826] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__functions.h\n'}
[0.683942] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__functions.h\n'}
[0.684083] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.h\n'}
[0.684176] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__functions.c\n'}
[0.684242] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.h\n'}
[0.684304] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/camera_calibration_imgs.h\n'}
[0.684365] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/library_path.sh\n'}
[0.684427] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/library_path.dsv\n'}
[0.684493] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_generator_c.so\n'}
[0.684587] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.684693] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.684805] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.684943] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_fastrtps_c.h\n'}
[0.685010] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.685072] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_fastrtps_c__visibility_control.h\n'}
[0.685135] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.685197] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_fastrtps_c.h\n'}
[0.685287] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_fastrtps_c.h\n'}
[0.685352] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_fastrtps_c.so\n'}
[0.685427] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.685487] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.685548] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.685669] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.c\n'}
[0.685734] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_introspection_c.h\n'}
[0.685797] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.685858] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_introspection_c__visibility_control.h\n'}
[0.685920] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.685980] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.c\n'}
[0.686041] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.c\n'}
[0.686101] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_introspection_c.h\n'}
[0.686163] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_introspection_c.h\n'}
[0.686345] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_introspection_c.so\n'}
[0.686406] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_c.so\n'}
[0.686466] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.686526] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.686585] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.686646] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__traits.hpp\n'}
[0.686762] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__builder.hpp\n'}
[0.686820] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__struct.hpp\n'}
[0.686878] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/calibrate_laser_import.hpp\n'}
[0.686938] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.686997] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/image_pair.hpp\n'}
[0.687058] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.687118] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__builder.hpp\n'}
[0.687179] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__struct.hpp\n'}
[0.687239] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__traits.hpp\n'}
[0.687299] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__builder.hpp\n'}
[0.687385] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__traits.hpp\n'}
[0.687449] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__struct.hpp\n'}
[0.687510] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/camera_calibration_imgs.hpp\n'}
[0.687571] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.687631] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.687692] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.687752] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/dds_fastrtps\n'}
[0.687812] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.687873] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.687933] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h\n'}
[0.688044] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.688188] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/dds_fastrtps\n'}
[0.688245] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.688303] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_fastrtps_cpp.hpp\n'}
[0.688361] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_fastrtps_cpp.so\n'}
[0.688437] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces\n'}
[0.688501] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv\n'}
[0.688564] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail\n'}
[0.688627] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__type_support.cpp\n'}
[0.688690] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/srv/detail/calibrate_laser_import__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.688754] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg\n'}
[0.688817] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail\n'}
[0.688880] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.688944] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__rosidl_typesupport_introspection_cpp.hpp\n'}
[0.689008] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/image_pair__type_support.cpp\n'}
[0.689078] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/include/interfaces/interfaces/msg/detail/camera_calibration_imgs__type_support.cpp\n'}
[0.689142] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_introspection_cpp.so\n'}
[0.689205] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_typesupport_cpp.so\n'}
[0.689268] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/pythonpath.sh\n'}
[0.689331] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/pythonpath.dsv\n'}
[0.689412] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info\n'}
[0.689468] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/dependency_links.txt\n'}
[0.689525] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/PKG-INFO\n'}
[0.689581] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/SOURCES.txt\n'}
[0.689637] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces-0.0.0-py3.10.egg-info/top_level.txt\n'}
[0.689694] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces\n'}
[0.689749] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_introspection_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.689815] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_fastrtps_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.689872] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv\n'}
[0.689928] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/__init__.py\n'}
[0.689984] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/_calibrate_laser_import_s.c\n'}
[0.690041] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv/_calibrate_laser_import.py\n'}
[0.690097] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_c.c\n'}
[0.690154] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/libinterfaces__rosidl_generator_py.so\n'}
[0.690209] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.690266] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg\n'}
[0.690339] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_camera_calibration_imgs_s.c\n'}
[0.690411] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_camera_calibration_imgs.py\n'}
[0.690473] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/__init__.py\n'}
[0.690545] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_image_pair.py\n'}
[0.690607] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg/_image_pair_s.c\n'}
[0.690668] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/__init__.py\n'}
[0.690728] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_fastrtps_c.c\n'}
[0.690790] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/_interfaces_s.ep.rosidl_typesupport_introspection_c.c\n'}
[0.700072] (-) TimerEvent: {}
[0.718520] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces'...\n"}
[0.718677] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/msg'...\n"}
[0.718750] (interfaces) StdoutLine: {'line': b"Listing '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/srv'...\n"}
[0.722964] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_fastrtps_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.723148] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_introspection_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.723336] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages/interfaces/interfaces_s__rosidl_typesupport_c.cpython-310-x86_64-linux-gnu.so\n'}
[0.723525] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/libinterfaces__rosidl_generator_py.so\n'}
[0.723662] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/CameraCalibrationImgs.idl\n'}
[0.723840] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/ImagePair.idl\n'}
[0.723975] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport.idl\n'}
[0.724109] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/CameraCalibrationImgs.msg\n'}
[0.724243] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/msg/ImagePair.msg\n'}
[0.724307] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport.srv\n'}
[0.724370] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport_Request.msg\n'}
[0.724472] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/srv/CalibrateLaserImport_Response.msg\n'}
[0.724560] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/package_run_dependencies/interfaces\n'}
[0.724670] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/parent_prefix_path/interfaces\n'}
[0.724764] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/ament_prefix_path.sh\n'}
[0.724873] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/ament_prefix_path.dsv\n'}
[0.724981] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/path.sh\n'}
[0.725113] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/environment/path.dsv\n'}
[0.725227] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.bash\n'}
[0.725328] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.sh\n'}
[0.725489] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.zsh\n'}
[0.725645] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/local_setup.dsv\n'}
[0.725866] (interfaces) StdoutLine: {'line': b'-- Installing: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/package.dsv\n'}
[0.726061] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/ament_index/resource_index/packages/interfaces\n'}
[0.726245] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cExport.cmake\n'}
[0.726476] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cExport-noconfig.cmake\n'}
[0.726665] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cExport.cmake\n'}
[0.726784] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cExport-noconfig.cmake\n'}
[0.726960] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cExport.cmake\n'}
[0.727131] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cExport-noconfig.cmake\n'}
[0.727299] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cExport.cmake\n'}
[0.727489] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cExport-noconfig.cmake\n'}
[0.727722] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_cppExport.cmake\n'}
[0.728021] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cppExport.cmake\n'}
[0.728370] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_typesupport_fastrtps_cppExport-noconfig.cmake\n'}
[0.729871] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cppExport.cmake\n'}
[0.730256] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_introspection_cppExport-noconfig.cmake\n'}
[0.732198] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cppExport.cmake\n'}
[0.732297] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfaces__rosidl_typesupport_cppExport-noconfig.cmake\n'}
[0.732389] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_pyExport.cmake\n'}
[0.732503] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/export_interfaces__rosidl_generator_pyExport-noconfig.cmake\n'}
[0.732864] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake-extras.cmake\n'}
[0.734069] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_dependencies-extras.cmake\n'}
[0.734431] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_include_directories-extras.cmake\n'}
[0.734559] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_libraries-extras.cmake\n'}
[0.734631] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/ament_cmake_export_targets-extras.cmake\n'}
[0.734697] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake_export_typesupport_targets-extras.cmake\n'}
[0.734760] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/rosidl_cmake_export_typesupport_libraries-extras.cmake\n'}
[0.734822] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfacesConfig.cmake\n'}
[0.734888] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/cmake/interfacesConfig-version.cmake\n'}
[0.735023] (interfaces) StdoutLine: {'line': b'-- Up-to-date: /home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/share/interfaces/package.xml\n'}
[0.735157] (interfaces) CommandEnded: {'returncode': 0}
[0.800153] (-) TimerEvent: {}
[0.845175] (interfaces) JobEnded: {'identifier': 'interfaces', 'rc': 0}
[0.846397] (SurfaceScanner) JobStarted: {'identifier': 'SurfaceScanner'}
[0.856018] (SurfaceScanner) JobProgress: {'identifier': 'SurfaceScanner', 'progress': 'cmake'}
[0.857931] (SurfaceScanner) JobProgress: {'identifier': 'SurfaceScanner', 'progress': 'build'}
[0.860474] (SurfaceScanner) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner', '--', '-j8', '-l8'], 'cwd': '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('CONDA_PROMPT_MODIFIER', '(base)'), ('USER', 'peri'), ('LC_TIME', 'de_DE.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/peri'), ('CONDA_SHLVL', '1'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_DE.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1737'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'peri'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'peri'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/peri/anaconda3/bin:/home/peri/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/peri:@/tmp/.ICE-unix/1737,unix/peri:/tmp/.ICE-unix/1737'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_DE.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d4f09e35_2692_495c_a82f_31586ecb3f71'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_DE.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.3U6951'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.138'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/peri/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_DE.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('CONDA_DEFAULT_ENV', 'base'), ('LC_MEASUREMENT', 'de_DE.UTF-8'), ('LC_IDENTIFICATION', 'de_DE.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/build/SurfaceScanner'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/peri/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=9a5b667e1c22f4f1b10c468d648f5955'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_DE.UTF-8'), ('CONDA_PREFIX', '/home/peri/anaconda3'), ('LC_PAPER', 'de_DE.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/interfaces:/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/install/SurfaceScanner:/opt/ros/humble')]), 'shell': False}
[0.900271] (-) TimerEvent: {}
[0.901286] (SurfaceScanner) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target camera_node\x1b[0m\n'}
[0.905472] (SurfaceScanner) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target surface_scanner_node\x1b[0m\n'}
[0.918063] (SurfaceScanner) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/camera_node.dir/src/camera_node.cpp.o\x1b[0m\n'}
[0.931048] (SurfaceScanner) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/surface_scanner_node.dir/src/SurfaceScannerNode.cpp.o\x1b[0m\n'}
[1.000370] (-) TimerEvent: {}
[1.100668] (-) TimerEvent: {}
[1.200963] (-) TimerEvent: {}
[1.301283] (-) TimerEvent: {}
[1.401632] (-) TimerEvent: {}
[1.501978] (-) TimerEvent: {}
[1.602349] (-) TimerEvent: {}
[1.702706] (-) TimerEvent: {}
[1.803091] (-) TimerEvent: {}
[1.903482] (-) TimerEvent: {}
[2.004067] (-) TimerEvent: {}
[2.104642] (-) TimerEvent: {}
[2.205075] (-) TimerEvent: {}
[2.305392] (-) TimerEvent: {}
[2.405708] (-) TimerEvent: {}
[2.506018] (-) TimerEvent: {}
[2.606348] (-) TimerEvent: {}
[2.706803] (-) TimerEvent: {}
[2.807419] (-) TimerEvent: {}
[2.907937] (-) TimerEvent: {}
[3.008416] (-) TimerEvent: {}
[3.108948] (-) TimerEvent: {}
[3.209368] (-) TimerEvent: {}
[3.310361] (-) TimerEvent: {}
[3.410723] (-) TimerEvent: {}
[3.511029] (-) TimerEvent: {}
[3.611330] (-) TimerEvent: {}
[3.711627] (-) TimerEvent: {}
[3.811902] (-) TimerEvent: {}
[3.912210] (-) TimerEvent: {}
[4.012518] (-) TimerEvent: {}
[4.112832] (-) TimerEvent: {}
[4.213140] (-) TimerEvent: {}
[4.313482] (-) TimerEvent: {}
[4.389744] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[4.390007] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.390119] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_cam_calib_imgs\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.390313] (SurfaceScanner) StderrLine: {'line': b'   19 |     srv_send_cam_calib_imgs = create_service<std_srvs::srv::Trigger>("send_cam_calib_imgs", &\x1b[01;31m\x1b[Ksend_cam_calib_imgs\x1b[m\x1b[K);\n'}
[4.390414] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.390504] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:20:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_calib\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.390597] (SurfaceScanner) StderrLine: {'line': b'   20 |     srv_send_img_pair_calib = create_service<std_srvs::srv::Trigger>("send_img_pair_calib", &\x1b[01;31m\x1b[Ksend_img_pair_calib\x1b[m\x1b[K);\n'}
[4.390682] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.390767] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:21:98:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_surface\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.390856] (SurfaceScanner) StderrLine: {'line': b'   21 |     srv_send_img_pair_surface = create_service<std_srvs::srv::Trigger>("send_img_pair_surface", &\x1b[01;31m\x1b[Ksend_img_pair_surface\x1b[m\x1b[K);\n'}
[4.390939] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.391024] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:22:88:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::start_img_stream\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.391114] (SurfaceScanner) StderrLine: {'line': b'   22 |     srv_start_img_stream = create_service<std_srvs::srv::Trigger>("start_img_stream", &\x1b[01;31m\x1b[Kstart_img_stream\x1b[m\x1b[K);\n'}
[4.391197] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.391292] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:23:86:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&RPI_Camera_node::send_img_pair_calib\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.391389] (SurfaceScanner) StderrLine: {'line': b'   23 |     srv_stop_img_stream = create_service<std_srvs::srv::Trigger>("stop_img_stream", &\x1b[01;31m\x1b[Ksend_img_pair_calib\x1b[m\x1b[K);\n'}
[4.391508] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.413579] (-) TimerEvent: {}
[4.513886] (-) TimerEvent: {}
[4.614171] (-) TimerEvent: {}
[4.714487] (-) TimerEvent: {}
[4.814838] (-) TimerEvent: {}
[4.816421] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_img_pair_calib(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.816741] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:39:93:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.816942] (SurfaceScanner) StderrLine: {'line': b'   39 | void RPI_Camera_node::send_img_pair_calib(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.817123] (SurfaceScanner) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.817761] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_img_pair_surface(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.817974] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:49:95:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.818160] (SurfaceScanner) StderrLine: {'line': b'   49 | void RPI_Camera_node::send_img_pair_surface(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.818355] (SurfaceScanner) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.830898] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::send_cam_calib_imgs(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.831199] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:59:93:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.831424] (SurfaceScanner) StderrLine: {'line': b'   59 | void RPI_Camera_node::send_cam_calib_imgs(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.831610] (SurfaceScanner) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.831957] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::start_img_stream(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.832148] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:85:90:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.832333] (SurfaceScanner) StderrLine: {'line': b'   85 | void RPI_Camera_node::start_img_stream(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.832509] (SurfaceScanner) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.832661] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid RPI_Camera_node::stop_img_stream(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.832835] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:99:89:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.833007] (SurfaceScanner) StderrLine: {'line': b'   99 | void RPI_Camera_node::stop_img_stream(\x1b[01;35m\x1b[Kconst shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K,\n'}
[4.833163] (SurfaceScanner) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[4.914982] (-) TimerEvent: {}
[5.015387] (-) TimerEvent: {}
[5.115797] (-) TimerEvent: {}
[5.216171] (-) TimerEvent: {}
[5.316530] (-) TimerEvent: {}
[5.416897] (-) TimerEvent: {}
[5.517250] (-) TimerEvent: {}
[5.580002] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:39\x1b[m\x1b[K,\n'}
[5.580342] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.580448] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.580541] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.580630] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.580719] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.580820] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.580907] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.580995] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.581081] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.581174] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.581268] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.581360] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.581834] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.582366] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.582542] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.582685] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.582835] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.582951] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.583071] (SurfaceScanner) StderrLine: {'line': b'   52 |     typename function_traits<decltype( \x1b[01;31m\x1b[K&FunctionT::operator()\x1b[m\x1b[K)>::arguments>::type;\n'}
[5.583185] (SurfaceScanner) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.583367] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.583591] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.584204] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.584444] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.584552] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.584774] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.584883] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.585062] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.585162] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.585260] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.585532] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.585854] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.586173] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.586291] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.586745] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.586867] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.587009] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.587126] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.587228] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.587337] (SurfaceScanner) StderrLine: {'line': b'  121 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[5.587450] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[5.587560] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.587840] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[5.588366] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.588642] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.588743] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.588970] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.589064] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.589158] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.589251] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.589355] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.589462] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.589565] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.589822] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.590215] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.590435] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.590540] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.590664] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.590761] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.590854] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.590948] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[5.591041] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[5.591135] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[5.591228] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[5.591322] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[5.591427] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[5.591519] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[5.591609] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[5.591701] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.591805] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.591904] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.592036] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.592137] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.592238] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.592338] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.592453] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.592556] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[5.592653] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.592748] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.592846] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.592942] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.593049] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.593145] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.593241] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.593338] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.593433] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.593532] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.593630] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.593739] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.593837] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.593935] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.594054] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.594170] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.594302] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.594419] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.594545] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.594640] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.594731] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.594824] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.594916] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.595019] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.595112] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.595203] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.595303] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.595396] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.595503] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.595599] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.595698] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.595794] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.595892] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.595990] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.596108] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[5.596205] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.596303] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.596398] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.596505] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.596596] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.596690] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.596783] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.596884] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.596977] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.597069] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.597161] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.597251] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.597342] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.597447] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.597561] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.597664] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.597763] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.597855] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.597949] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.598050] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.598143] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.598237] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.598343] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.598457] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.598556] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.598657] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.598757] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.598858] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.598962] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.599065] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.599201] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[5.599304] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.599420] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.599538] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.599637] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.599736] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.599832] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.599929] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.600025] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.600122] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.600226] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.600365] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.600493] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.600612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.600720] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.600839] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.600963] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.601075] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.601185] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.601290] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.601389] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.601519] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.601641] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.601751] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.601859] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.601968] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.602081] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.602192] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.602307] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.602436] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.602543] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.602651] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.602812] (SurfaceScanner) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[5.602917] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.603029] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.603143] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.603264] (SurfaceScanner) StderrLine: {'line': b'  128 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[5.603375] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[5.603500] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.603627] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[5.603739] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.603850] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.603960] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.604067] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.604167] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.604267] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.604364] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.604488] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.604583] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.604680] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.604776] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.604879] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.604975] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.605072] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.605190] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.605288] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.605382] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.605497] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[5.605587] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[5.605675] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[5.605763] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[5.605852] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[5.605942] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[5.606030] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[5.606120] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[5.606210] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.606325] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.606443] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.606580] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.606699] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.606824] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.606951] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.607066] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.607186] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[5.607297] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.607407] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.607524] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.607624] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.607722] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.607818] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.607913] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.608009] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.608105] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.608199] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.608294] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.608388] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.608498] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.608590] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.608707] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.608825] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.608927] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.609021] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.609130] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.609223] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.609315] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.609420] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.609517] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.609612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.609715] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.609809] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.609911] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.610011] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.610106] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.610203] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.610314] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.610427] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.610520] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.610612] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.610720] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[5.610815] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.610910] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.611004] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.611097] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.611192] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.611283] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.611375] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.611487] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.611586] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.611682] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.611776] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.611870] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.611976] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.612071] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.612187] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.612284] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.612380] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.612476] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.612569] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.612672] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.612767] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.612861] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.612962] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.613057] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.613154] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.613249] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.613344] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.613445] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.613541] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.613645] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.613763] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[5.613860] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.613956] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.614060] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.614155] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.614250] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.614359] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.614466] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.614559] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.614651] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.614748] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.614840] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.614931] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.615023] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.615134] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.615228] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.615349] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.615462] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.615564] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.615665] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.615766] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.615866] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.615965] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.616064] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.616161] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.616259] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.616360] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.616474] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.616567] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.616659] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.616754] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.616858] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.616986] (SurfaceScanner) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[5.617080] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.617189] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.617292] (-) TimerEvent: {}
[5.617413] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.617551] (SurfaceScanner) StderrLine: {'line': b'  135 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[5.617653] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[5.617750] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.617873] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[5.617973] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.618070] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.618171] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.618270] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.618416] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.618525] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.618617] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.618708] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.618799] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.618892] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.618984] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.619075] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.619167] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.619270] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.619397] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.619491] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.619583] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.619676] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[5.619771] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[5.619863] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[5.619956] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[5.620049] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[5.620140] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[5.620233] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[5.620327] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[5.620437] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.620537] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.620641] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.620759] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.620890] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.621009] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.621116] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.621215] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.621317] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[5.621430] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.621522] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.621616] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.621708] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.621800] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.621892] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.621985] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.622077] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.622178] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.622271] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.622395] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.622490] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.622585] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.622680] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.622798] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.622917] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.623024] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.623121] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.623246] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.623342] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.623437] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.623532] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.623626] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.623720] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.623815] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.623910] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.624005] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.624101] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.624195] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.624299] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.624394] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.624507] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.624602] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.624694] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.624800] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[5.624893] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.624984] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.625082] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.625174] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.625266] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.625358] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.625465] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.625559] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.625653] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.625748] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.625842] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.625937] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.626031] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.626129] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.626240] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.626350] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.626462] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.626562] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.626660] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.626767] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.626872] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.626969] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.627066] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.627171] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.627268] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.627367] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.627472] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.627571] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.627664] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.627760] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.627868] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[5.627961] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.628054] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.628153] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.628253] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.628346] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.628438] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.628529] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.628620] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.628712] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.628804] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.628896] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.628986] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.629085] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.629178] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.629271] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.629405] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.629504] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.629602] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.629699] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.629796] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.629892] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.629998] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.630096] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.630194] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.630299] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.630405] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.630514] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.630606] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.630699] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.630793] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.630886] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.631006] (SurfaceScanner) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[5.631100] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.631192] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.631300] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.631414] (SurfaceScanner) StderrLine: {'line': b'  142 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[5.631506] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[5.631598] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.631703] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[5.631795] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.631887] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.631977] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.632070] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.632161] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.632256] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.632350] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.632457] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.632555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.632666] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.632765] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.632870] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.632968] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.633065] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.633189] (SurfaceScanner) StderrLine: {'line': b' 1499 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.633288] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.633384] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.633490] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[5.633580] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[5.633672] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[5.633763] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[5.633853] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvdef.h:779\x1b[m\x1b[K,\n'}
[5.633945] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:52\x1b[m\x1b[K,\n'}
[5.634036] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[5.634129] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[5.634221] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.634351] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.634470] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1499:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {void (RPI_Camera_node::*&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.634608] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.634713] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.634832] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.634937] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.635033] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2585:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.635141] (SurfaceScanner) StderrLine: {'line': b' 2585 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[5.635235] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.635329] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.635423] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.635518] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.635615] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.635710] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.635803] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.635897] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.635992] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.636087] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.636192] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.636288] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.636397] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.636489] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.636587] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.636710] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.636810] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.636903] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.637017] (SurfaceScanner) StderrLine: {'line': b' 1509 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.637109] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.637203] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1509:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.637301] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.637394] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.637503] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.637601] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.637698] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.637794] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.637892] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.637988] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.638095] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.638192] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.638301] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.638420] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.638512] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.638617] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[5.638717] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.638818] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.638911] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.639003] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.639095] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.639186] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.639278] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.639370] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.639463] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.639555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.639646] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.639738] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.639829] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.639920] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.640043] (SurfaceScanner) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[5.640137] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.640228] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.640323] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.640431] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.640531] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.640633] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.640736] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.640839] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.640942] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.641042] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.641143] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.641245] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.641359] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.641467] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.641557] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.641677] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[5.641769] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.641859] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.641966] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.642058] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.642147] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.642236] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.642344] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.642451] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.642547] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.642643] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.642742] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.642842] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.642943] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.643046] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.643148] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.643308] (SurfaceScanner) StderrLine: {'line': b' 1573 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[5.643410] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[5.643525] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1573:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.643635] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.643737] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.643839] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.643942] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.644044] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.644146] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.644248] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.644351] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.644452] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.644553] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.644655] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.644771] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.644878] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.645017] (SurfaceScanner) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[5.645117] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[5.645217] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.645340] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99)\n'}
[5.645473] (SurfaceScanner) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[5.645565] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.645657] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.645749] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.645841] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.645932] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.646031] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.646129] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.646223] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.646328] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.646439] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.646541] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.646647] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:4\x1b[m\x1b[K,\n'}
[5.646753] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[5.646858] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.646986] (SurfaceScanner) StderrLine: {'line': b' 1477 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[5.647091] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.647207] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.647311] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = void (RPI_Camera_node::*&&)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.647457] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1473:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.647646] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.647760] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.647873] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.647981] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.648078] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1391:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.648179] (SurfaceScanner) StderrLine: {'line': b' 1391 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[5.648276] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.648380] (SurfaceScanner) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.648504] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.648607] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = void (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.648711] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:19:69:\x1b[m\x1b[K   required from here\n'}
[5.648807] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.648908] (SurfaceScanner) StderrLine: {'line': b' 1414 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[5.648998] (SurfaceScanner) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.649087] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.649200] (SurfaceScanner) StderrLine: {'line': b' 1414 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[5.649298] (SurfaceScanner) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.649388] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.649511] (SurfaceScanner) StderrLine: {'line': b' 1415 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[5.649608] (SurfaceScanner) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.649706] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kvoid (RPI_Camera_node::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.649823] (SurfaceScanner) StderrLine: {'line': b' 1415 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[5.649922] (SurfaceScanner) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.717411] (-) TimerEvent: {}
[5.817766] (-) TimerEvent: {}
[5.918236] (-) TimerEvent: {}
[6.018617] (-) TimerEvent: {}
[6.118933] (-) TimerEvent: {}
[6.188678] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[6.188934] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[6.189076] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/unordered_map:40\x1b[m\x1b[K,\n'}
[6.189202] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/functional:61\x1b[m\x1b[K,\n'}
[6.189326] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[6.189449] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[6.189569] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:55\x1b[m\x1b[K,\n'}
[6.189699] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[6.189820] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[6.189944] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:1\x1b[m\x1b[K,\n'}
[6.190065] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.190182] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = RPI_Camera_node; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.190320] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = RPI_Camera_node; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<RPI_Camera_node>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.190483] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.190633] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.190767] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.190894] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:409:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}; _Tp = RPI_Camera_node]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.191044] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:862:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = RPI_Camera_node; _Alloc = std::allocator<RPI_Camera_node>; _Args = {const char (&)[16]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.191169] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:878:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = RPI_Camera_node; _Args = {const char (&)[16]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.191289] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:125:55:\x1b[m\x1b[K   required from here\n'}
[6.191417] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node(const char [16])\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.191539] (SurfaceScanner) StderrLine: {'line': b'  162 |         { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[6.191667] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.191795] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.cpp:1\x1b[m\x1b[K:\n'}
[6.191916] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:17:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KRPI_Camera_node::RPI_Camera_node()\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.192035] (SurfaceScanner) StderrLine: {'line': b'   17 |   public: \x1b[01;36m\x1b[KRPI_Camera_node\x1b[m\x1b[K() : Node("camera_node"){\n'}
[6.192154] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.192277] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/camera_node.hpp:17:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[6.219041] (-) TimerEvent: {}
[6.248921] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.249154] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.249272] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.249380] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.249490] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:13:44:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_rotMat\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.249628] (SurfaceScanner) StderrLine: {'line': b'   13 |     cv::Mat m_originalImg, m_imgWithLaser, \x1b[01;35m\x1b[Km_rotMat\x1b[m\x1b[K, m_mask;\n'}
[6.249729] (SurfaceScanner) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.250008] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:29:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_tVec\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.250163] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat m_ImgDiffLaser, \x1b[01;35m\x1b[Km_tVec\x1b[m\x1b[K, m_laserPoints;\n'}
[6.250308] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[6.250442] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.250548] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.250658] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.250768] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.250899] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[6.251032] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.251147] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.251474] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.251624] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.251739] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:13:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_mask\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.251846] (SurfaceScanner) StderrLine: {'line': b'   13 |     cv::Mat m_originalImg, m_imgWithLaser, m_rotMat, \x1b[01;35m\x1b[Km_mask\x1b[m\x1b[K;\n'}
[6.251946] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[6.252045] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_ImgDiffLaser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.252166] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;35m\x1b[Km_ImgDiffLaser\x1b[m\x1b[K, m_tVec, m_laserPoints;\n'}
[6.252267] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.252371] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.252480] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.252582] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.252688] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.252807] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[6.252916] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.253021] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.253122] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.253223] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.253352] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:\x1b[m\x1b[K In copy constructor \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.253457] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:13:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::m_mask\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.253588] (SurfaceScanner) StderrLine: {'line': b'   13 |     cv::Mat m_originalImg, m_imgWithLaser, m_rotMat, \x1b[01;35m\x1b[Km_mask\x1b[m\x1b[K;\n'}
[6.253694] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[6.253792] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:12:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::m_ImgDiffLaser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.253897] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;35m\x1b[Km_ImgDiffLaser\x1b[m\x1b[K, m_tVec, m_laserPoints;\n'}
[6.254009] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.254115] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.254230] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.254368] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.254508] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:43:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[6.254622] (SurfaceScanner) StderrLine: {'line': b'   43 | \x1b[01;35m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[6.254738] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.255682] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.256082] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.256223] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.256348] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:\x1b[m\x1b[K At global scope:\n'}
[6.256469] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:4:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kconst cv::Mat defaultMat\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.256587] (SurfaceScanner) StderrLine: {'line': b'    4 | const cv::Mat \x1b[01;31m\x1b[KdefaultMat\x1b[m\x1b[K = cv::Mat();\n'}
[6.256704] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.256992] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.257143] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.257263] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.257381] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.257499] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:4:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst cv::Mat defaultMat\x1b[m\x1b[K\xe2\x80\x99 previously declared here\n'}
[6.257620] (SurfaceScanner) StderrLine: {'line': b'    4 | const cv::Mat \x1b[01;36m\x1b[KdefaultMat\x1b[m\x1b[K = cv::Mat();\n'}
[6.257739] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.257856] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.257988] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.258105] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.258228] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:12:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::getLinePixels(cv::InputArray)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.258363] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;31m\x1b[KgetLinePixels\x1b[m\x1b[K(cv::InputArray diffImg){\n'}
[6.258493] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.258619] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.258736] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.258847] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.258968] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.259075] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:12:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::getLinePixels(cv::InputArray)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.259183] (SurfaceScanner) StderrLine: {'line': b'   12 |     cv::Mat \x1b[01;36m\x1b[KgetLinePixels\x1b[m\x1b[K(cv::InputArray diffImg){\n'}
[6.259295] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.261234] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.261438] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.261665] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.261771] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:93:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::world2cam(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.261870] (SurfaceScanner) StderrLine: {'line': b'   93 |     cv::Mat \x1b[01;31m\x1b[Kworld2cam\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[6.261964] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.262191] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.262307] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.262424] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.262523] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.262629] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:93:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::world2cam(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.262747] (SurfaceScanner) StderrLine: {'line': b'   93 |     cv::Mat \x1b[01;36m\x1b[Kworld2cam\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[6.262863] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.262974] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.263081] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.263189] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.263302] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:97:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::cam2world(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.263422] (SurfaceScanner) StderrLine: {'line': b'   97 |     cv::Mat \x1b[01;31m\x1b[Kcam2world\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[6.263539] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.263641] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.263738] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.263842] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.263930] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.264025] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:97:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::cam2world(const cv::Mat&, const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.264461] (SurfaceScanner) StderrLine: {'line': b'   97 |     cv::Mat \x1b[01;36m\x1b[Kcam2world\x1b[m\x1b[K(const cv::Mat &pts, const cv::Mat &transVec, const cv::Mat &rotMatrix){\n'}
[6.264565] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.264658] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.264751] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.264850] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.265409] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:107:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::bild2world(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.265536] (SurfaceScanner) StderrLine: {'line': b'  107 |     cv::Mat \x1b[01;31m\x1b[Kbild2world\x1b[m\x1b[K(cv::Mat pts, cv::Mat transVec, cv::Mat rotMatrix, cv::Mat cam_matrix, cv::Mat plane=defaultMat){\n'}
[6.265638] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.265732] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.265828] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.265921] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.266027] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.266118] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:107:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::bild2world(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.266214] (SurfaceScanner) StderrLine: {'line': b'  107 |     cv::Mat \x1b[01;36m\x1b[Kbild2world\x1b[m\x1b[K(cv::Mat pts, cv::Mat transVec, cv::Mat rotMatrix, cv::Mat cam_matrix, cv::Mat plane=defaultMat){\n'}
[6.266317] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.266421] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.266514] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.266603] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.266691] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:131:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::planeFitWithSvd(const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.266782] (SurfaceScanner) StderrLine: {'line': b'  131 |     cv::Mat \x1b[01;31m\x1b[KplaneFitWithSvd\x1b[m\x1b[K(const cv::Mat &points){\n'}
[6.266870] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.266959] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:1\x1b[m\x1b[K,\n'}
[6.267049] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.267154] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.267242] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.267334] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Utility.hpp:131:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat utility::planeFitWithSvd(const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.267425] (SurfaceScanner) StderrLine: {'line': b'  131 |     cv::Mat \x1b[01;36m\x1b[KplaneFitWithSvd\x1b[m\x1b[K(const cv::Mat &points){\n'}
[6.267522] (SurfaceScanner) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.267609] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.267704] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.267799] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:9:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kclass LaserLine\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.267888] (SurfaceScanner) StderrLine: {'line': b'    9 | class \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K\n'}
[6.267979] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.268074] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.268162] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.268250] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.268337] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:9:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious definition of \xe2\x80\x98\x1b[01m\x1b[Kclass LaserLine\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.268426] (SurfaceScanner) StderrLine: {'line': b'    9 | class \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K\n'}
[6.268512] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.268598] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.268685] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.268772] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.268862] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[6.268967] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.269080] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.269176] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.269281] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.269380] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:29:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(cv::Mat, cv::Mat, cv::Mat, cv::Mat, cv::Mat)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.269493] (SurfaceScanner) StderrLine: {'line': b'   29 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(cv::Mat originalImg, cv::Mat imgWithLaser, cv::Mat rotMat, cv::Mat tVec, cv::Mat mask): m_originalImg(originalImg),\n'}
[6.269583] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.269671] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.269757] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.269841] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:43:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.269928] (SurfaceScanner) StderrLine: {'line': b'   43 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[6.270014] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.270100] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.270185] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.270271] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.270366] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:43:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::LaserLine(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.270491] (SurfaceScanner) StderrLine: {'line': b'   43 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::LaserLine(const LaserLine &other):m_originalImg(other.m_originalImg), m_imgWithLaser(other.m_imgWithLaser), m_rotMat(other.m_rotMat), m_mask(other.m_mask),\n'}
[6.270580] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.270670] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.270756] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.270847] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine::~LaserLine()\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.270933] (SurfaceScanner) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::~LaserLine(){\n'}
[6.271021] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.271109] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.271195] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.271280] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.271369] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine::~LaserLine()\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.271472] (SurfaceScanner) StderrLine: {'line': b'   61 | \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::~LaserLine(){\n'}
[6.271586] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.271699] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.271814] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.271932] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:65:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_laserPoints() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.272047] (SurfaceScanner) StderrLine: {'line': b'   65 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_laserPoints() const{\n'}
[6.272158] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.272266] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.272366] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.272474] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.272570] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:65:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_laserPoints() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.272669] (SurfaceScanner) StderrLine: {'line': b'   65 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_laserPoints() const{\n'}
[6.272760] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.272852] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.272944] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.273061] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:69:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_rotMatrix() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.273151] (SurfaceScanner) StderrLine: {'line': b'   69 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_rotMatrix() const{\n'}
[6.273234] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.273323] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.273424] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.273524] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.273614] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:69:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_rotMatrix() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.273712] (SurfaceScanner) StderrLine: {'line': b'   69 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_rotMatrix() const{\n'}
[6.273799] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.273886] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.273986] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.274085] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:73:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_tVec() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.274176] (SurfaceScanner) StderrLine: {'line': b'   73 | cv::Mat \x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::get_tVec() const{\n'}
[6.274265] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.274367] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.274457] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.274548] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.274641] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:73:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcv::Mat LaserLine::get_tVec() const\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.274739] (SurfaceScanner) StderrLine: {'line': b'   73 | cv::Mat \x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::get_tVec() const{\n'}
[6.274839] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.274935] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:2\x1b[m\x1b[K,\n'}
[6.275057] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.275157] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:77:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[KLaserLine& LaserLine::operator=(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.275264] (SurfaceScanner) StderrLine: {'line': b'   77 | LaserLine &\x1b[01;31m\x1b[KLaserLine\x1b[m\x1b[K::operator=(const LaserLine &other){\n'}
[6.275364] (SurfaceScanner) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.275461] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Laser.hpp:1\x1b[m\x1b[K,\n'}
[6.275562] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:1\x1b[m\x1b[K,\n'}
[6.275655] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[6.275745] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/LaserLine.hpp:77:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserLine& LaserLine::operator=(const LaserLine&)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[6.275836] (SurfaceScanner) StderrLine: {'line': b'   77 | LaserLine &\x1b[01;36m\x1b[KLaserLine\x1b[m\x1b[K::operator=(const LaserLine &other){\n'}
[6.275925] (SurfaceScanner) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.319151] (-) TimerEvent: {}
[6.419496] (-) TimerEvent: {}
[6.519782] (-) TimerEvent: {}
[6.620051] (-) TimerEvent: {}
[6.720333] (-) TimerEvent: {}
[6.802289] (SurfaceScanner) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/camera_node.dir/build.make:76: CMakeFiles/camera_node.dir/src/camera_node.cpp.o] Error 1\n'}
[6.802507] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/camera_node.dir/all] Error 2\n'}
[6.802587] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** Waiting for unfinished jobs....\n'}
[6.820445] (-) TimerEvent: {}
[6.920705] (-) TimerEvent: {}
[7.021136] (-) TimerEvent: {}
[7.121429] (-) TimerEvent: {}
[7.221711] (-) TimerEvent: {}
[7.321990] (-) TimerEvent: {}
[7.422389] (-) TimerEvent: {}
[7.522669] (-) TimerEvent: {}
[7.622935] (-) TimerEvent: {}
[7.670852] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.671005] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KScanner::Scanner()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.671061] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:61:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KScanner::m_Calibrated\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.671126] (SurfaceScanner) StderrLine: {'line': b'   61 |     bool \x1b[01;35m\x1b[Km_Calibrated\x1b[m\x1b[K;\n'}
[7.671177] (SurfaceScanner) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.671230] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:60:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KLaser Scanner::m_Laser\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.671286] (SurfaceScanner) StderrLine: {'line': b'   60 |     Laser \x1b[01;35m\x1b[Km_Laser\x1b[m\x1b[K;\n'}
[7.671333] (SurfaceScanner) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.671380] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:71:1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.671434] (SurfaceScanner) StderrLine: {'line': b'   71 | \x1b[01;35m\x1b[KScanner\x1b[m\x1b[K::Scanner(): m_Calibrated(false), m_Laser(Laser()), m_Camera(Camera()), m_CurrentSurface(new pcl::PointCloud<pcl::PointXYZRGB>()){\n'}
[7.671482] (SurfaceScanner) StderrLine: {'line': b'      | \x1b[01;35m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.675411] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Scanner::calibrateScanner(const std::vector<cv::Mat>&, const cv::Mat&, const cv::Mat&, const bool&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.675561] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:123:60:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kimages\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.675621] (SurfaceScanner) StderrLine: {'line': b'  123 | void Scanner::calibrateScanner(\x1b[01;35m\x1b[Kconst std::vector<cv::Mat> &images\x1b[m\x1b[K, const cv::Mat &calibration_img, const cv::Mat &calibration_img_laser, const bool &safe_data_in_npz){\n'}
[7.675673] (SurfaceScanner) StderrLine: {'line': b'      |                                \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[7.675723] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:123:150:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksafe_data_in_npz\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.675775] (SurfaceScanner) StderrLine: {'line': b'  123 | void Scanner::calibrateScanner(const std::vector<cv::Mat> &images, const cv::Mat &calibration_img, const cv::Mat &calibration_img_laser, \x1b[01;35m\x1b[Kconst bool &safe_data_in_npz\x1b[m\x1b[K){\n'}
[7.675824] (SurfaceScanner) StderrLine: {'line': b'      |                                                                                                                                          \x1b[01;35m\x1b[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.685941] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:4\x1b[m\x1b[K:\n'}
[7.686103] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::tuple<bool, cv::Mat, cv::Mat, cv::Mat> Scanner::get_pose_in_charuco_board(cv::Ptr<cv::aruco::DetectorParameters>, cv::Ptr<cv::aruco::Board>, cv::Ptr<cv::aruco::Dictionary>, const cv::Mat&, const bool&) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.686176] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kcharuco_retval\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\x07-Wunused-variable\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.686231] (SurfaceScanner) StderrLine: {'line': b'  146 |         bool \x1b[01;35m\x1b[Kcharuco_retval\x1b[m\x1b[K = cv::aruco::interpolateCornersCharuco(corners, ids, img, &board, charuco_corners, charuco_ids);\n'}
[7.686282] (SurfaceScanner) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.694241] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Scanner::updatePcd(const cv::Mat&, const cv::Mat&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.694445] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:263:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Ksurface_koords\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.694553] (SurfaceScanner) StderrLine: {'line': b'  263 | void Scanner::updatePcd(\x1b[01;35m\x1b[Kconst cv::Mat &surface_koords\x1b[m\x1b[K, const cv::Mat &point_colors){\n'}
[7.694638] (SurfaceScanner) StderrLine: {'line': b'      |                         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.694692] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:263:71:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpoint_colors\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.694754] (SurfaceScanner) StderrLine: {'line': b'  263 | void Scanner::updatePcd(const cv::Mat &surface_koords, \x1b[01;35m\x1b[Kconst cv::Mat &point_colors\x1b[m\x1b[K){\n'}
[7.694804] (SurfaceScanner) StderrLine: {'line': b'      |                                                        \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.723067] (-) TimerEvent: {}
[7.823350] (-) TimerEvent: {}
[7.885518] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::SurfaceScannerNode()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.885891] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:39:43:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_service(const char [18], void (SurfaceScannerNode::*)(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.885956] (SurfaceScanner) StderrLine: {'line': b'   39 |     m_calibrateScannerSrv = \x1b[01;31m\x1b[Kcreate_service("calibrate_scanner", &SurfaceScannerNode::calibrateScannerSrvCallback)\x1b[m\x1b[K;\n'}
[7.886010] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.886066] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.886115] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.886164] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.886211] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.886259] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.886321] (SurfaceScanner) StderrLine: {'line': b'  267 |   \x1b[01;36m\x1b[Kcreate_service\x1b[m\x1b[K(\n'}
[7.886370] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.886416] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.886464] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:39:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KServiceT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.886513] (SurfaceScanner) StderrLine: {'line': b'   39 |     m_calibrateScannerSrv = \x1b[01;36m\x1b[Kcreate_service("calibrate_scanner", &SurfaceScannerNode::calibrateScannerSrvCallback)\x1b[m\x1b[K;\n'}
[7.886560] (SurfaceScanner) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.886608] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:41:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_service(const char [22], void (SurfaceScannerNode::*)(std::shared_ptr<interfaces::srv::CalibrateLaserImport_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::CalibrateLaserImport_Response_<std::allocator<void> > >))\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.886664] (SurfaceScanner) StderrLine: {'line': b'   41 |     m_calibrateLaserWithImportSrv = \x1b[01;31m\x1b[Kcreate_service("calibrate_with_import", &SurfaceScannerNode::calibrateWithImportSrvCallback)\x1b[m\x1b[K;\n'}
[7.886714] (SurfaceScanner) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.886762] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.886810] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.886858] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.886906] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.886960] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT, class CallbackT> typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.887015] (SurfaceScanner) StderrLine: {'line': b'  267 |   \x1b[01;36m\x1b[Kcreate_service\x1b[m\x1b[K(\n'}
[7.887064] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.887111] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:267:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.887164] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:41:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KServiceT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.887213] (SurfaceScanner) StderrLine: {'line': b'   41 |     m_calibrateLaserWithImportSrv = \x1b[01;36m\x1b[Kcreate_service("calibrate_with_import", &SurfaceScannerNode::calibrateWithImportSrvCallback)\x1b[m\x1b[K;\n'}
[7.887261] (SurfaceScanner) StderrLine: {'line': b'      |                                     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.889848] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:43:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_subscription(const char [9], int, std::_Bind_helper<false, void (SurfaceScannerNode::*)(const interfaces::msg::ImagePair_<std::allocator<void> >&), SurfaceScannerNode*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.890056] (SurfaceScanner) StderrLine: {'line': b'   43 |     imgPairSub = \x1b[01;31m\x1b[Kcreate_subscription("img_pair", 10, std::bind(&SurfaceScannerNode::imagePairCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.890115] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.890166] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.890216] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.890265] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.890328] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.890378] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.890431] (SurfaceScanner) StderrLine: {'line': b'  219 |   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[7.890480] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.890539] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.890588] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:43:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KMessageT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.890642] (SurfaceScanner) StderrLine: {'line': b'   43 |     imgPairSub = \x1b[01;36m\x1b[Kcreate_subscription("img_pair", 10, std::bind(&SurfaceScannerNode::imagePairCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.890692] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.891583] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:45:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSurfaceScannerNode::create_subscription(const char [15], int, std::_Bind_helper<false, void (SurfaceScannerNode::*)(const interfaces::msg::CameraCalibrationImgs_<std::allocator<void> >&), SurfaceScannerNode*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.891675] (SurfaceScanner) StderrLine: {'line': b'   45 |     camCalibrateImgsSub = \x1b[01;31m\x1b[Kcreate_subscription("cam_calib_imgs", 10, std::bind(&SurfaceScannerNode::camCalibImgsCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.891732] (SurfaceScanner) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.891783] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.891841] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.891891] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.891939] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[7.891991] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.892042] (SurfaceScanner) StderrLine: {'line': b'  219 |   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[7.892089] (SurfaceScanner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.892135] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.892182] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:45:46:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  couldn\xe2\x80\x99t deduce template parameter \xe2\x80\x98\x1b[01m\x1b[KMessageT\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.892231] (SurfaceScanner) StderrLine: {'line': b'   45 |     camCalibrateImgsSub = \x1b[01;36m\x1b[Kcreate_subscription("cam_calib_imgs", 10, std::bind(&SurfaceScannerNode::camCalibImgsCallback, this, _1))\x1b[m\x1b[K;\n'}
[7.892283] (SurfaceScanner) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.899264] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SurfaceScannerNode::calibrateScannerSrvCallback(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.899415] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:60:109:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[7.899473] (SurfaceScanner) StderrLine: {'line': b'   60 | void SurfaceScannerNode::calibrateScannerSrvCallback(\x1b[01;35m\x1b[Kconst std::shared_ptr<std_srvs::srv::Trigger::Request> request\x1b[m\x1b[K, std::shared_ptr<std_srvs::srv::Trigger::Response> response){\n'}
[7.899526] (SurfaceScanner) StderrLine: {'line': b'      |                                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[7.923445] (-) TimerEvent: {}
[8.023795] (-) TimerEvent: {}
[8.124172] (-) TimerEvent: {}
[8.224601] (-) TimerEvent: {}
[8.295420] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.296132] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.296204] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.296261] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.296315] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.296368] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.296423] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.296478] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.296532] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[8.296584] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::Dictionary>::shared_ptr(cv::Ptr<cv::aruco::Dictionary>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.296639] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.297530] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.297827] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.297883] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.297934] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.297992] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.298045] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[8.298095] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.298143] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.298197] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.298262] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.298778] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.298963] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.299021] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.299074] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.299128] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.299183] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.299370] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.299424] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.299494] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.299551] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.299608] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.299936] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[8.299994] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.300048] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.300101] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.300154] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.300206] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.300257] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.300309] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.300361] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.300415] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.300479] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.300527] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.300574] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.300621] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.300668] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.300720] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.300771] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[8.300823] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.300870] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.300918] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.300966] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.301014] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.301066] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.301114] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.301161] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.301209] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.301258] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.301306] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.301355] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.301402] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.301464] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.301514] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.301571] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[8.301622] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.301673] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.301724] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.301774] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.301824] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.301874] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.301923] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.301996] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.302050] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.302102] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.302185] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.302257] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.302326] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.302393] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.302455] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.302510] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[8.302562] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.302622] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.302673] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.302724] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.302774] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.302830] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.302881] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.302932] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.302983] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.303036] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.303086] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.303136] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.303186] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.303236] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.303286] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.303347] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[8.303398] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.303465] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.303515] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.303563] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.303612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.303661] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.303710] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.303759] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.303808] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.303859] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.303908] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.303956] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.304006] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.304055] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.304104] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.304156] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[8.304205] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.304253] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.304301] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.304350] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.304397] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.304445] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.304503] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.304552] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.304600] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.304655] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.304703] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.304752] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.304801] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.304849] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.304898] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.304949] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[8.304998] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.305047] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.305100] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.305150] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.305198] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.305246] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.305293] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.305341] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.305389] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[8.305450] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.305497] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.305544] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.305595] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.305642] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.305688] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.305739] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[8.305786] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.305832] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.305880] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.305927] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.305975] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.306023] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.306070] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.306117] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.306166] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[8.306218] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.306266] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.306327] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.306376] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.306428] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.306490] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.306541] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[8.306591] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.306640] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.306694] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.306744] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.306794] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.306848] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.306907] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.306971] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.307024] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.307075] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.307127] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.307179] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.307229] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.307281] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.307333] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.307388] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[8.307440] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.307491] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.307543] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.307602] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.307669] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.307721] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.307771] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.307822] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.307875] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.307936] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.307990] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.308062] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.308114] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.308165] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.308216] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.308278] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[8.308329] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.308379] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.308453] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::Dictionary>*}; _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.308518] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.308586] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.308650] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[8.308712] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.308773] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[8.308832] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.308890] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.308952] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Dictionary>; T = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.309022] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[8.309081] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.309141] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[8.309199] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.309257] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.309316] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::Dictionary; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.309376] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[8.309434] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.309498] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.309548] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[8.309598] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.309648] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.309699] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[8.309749] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.309798] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::Dictionary>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.309849] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[8.309927] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[8.310005] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.310073] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[8.310150] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.310237] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Dictionary>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::Dictionary>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.310305] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[8.310369] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.310453] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::Dictionary]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.310516] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[8.310577] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.310636] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[8.310697] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.310756] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.310840] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.310902] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.310962] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.311036] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.311125] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.311190] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.311252] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[8.311330] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::DetectorParameters>::shared_ptr(cv::Ptr<cv::aruco::DetectorParameters>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.311397] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.311467] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.311545] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.311597] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.311647] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.311698] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.311769] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[8.311821] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.311872] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.311924] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.311974] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.312025] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.312075] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.312152] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.312243] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.312338] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.312425] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.312498] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.312589] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.312651] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.312707] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.312762] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.312821] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[8.312885] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.312940] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.312999] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.313053] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.313106] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.313159] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.313212] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.313266] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.313319] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.313373] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.313443] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.313499] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.313553] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.313609] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.313666] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.313730] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[8.313788] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.313845] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.313908] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.313965] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.314022] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.314080] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.314139] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.314220] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.314281] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.314483] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.314541] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.314596] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.314656] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.314711] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.314772] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.314832] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[8.314890] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.314945] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.314998] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.315051] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.315102] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.315153] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.315203] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.315255] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.315307] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.315362] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.315413] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.315485] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.315555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.315614] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.315671] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.315734] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[8.315793] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.315853] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.315912] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.315972] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.316028] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.316083] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.316140] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.316198] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.316255] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.316313] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.316378] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.316435] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.316508] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.316559] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.316611] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.316672] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[8.316727] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.316777] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.316828] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.316879] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.316943] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.316995] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.317046] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.317098] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.317149] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.317200] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.317251] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.317301] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.317351] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.317401] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.317452] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.317505] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[8.317556] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.317605] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.317655] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.317705] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.317754] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.317803] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.317852] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.317909] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.317991] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.318046] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.318096] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.318152] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.318203] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.318255] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.318318] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.318380] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[8.318433] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.318500] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.318553] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.318602] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.318650] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.318697] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.318744] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.318793] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.318841] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[8.318889] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.318936] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.318983] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.319029] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.319082] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.319129] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.319180] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[8.319228] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.319275] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.319322] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.319369] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.319415] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.319478] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.319532] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.319588] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.319642] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[8.319698] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.319753] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.319808] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.319863] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.319922] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.319978] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.320036] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[8.320091] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.320162] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.320219] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.320280] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.320339] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.320394] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.320461] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.320510] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.320562] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.320610] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.320658] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.320706] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.320754] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.320802] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.320850] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.320902] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[8.320950] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.320998] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.321046] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.321093] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.321140] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.321187] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.321234] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.321282] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.321329] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.321375] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.321427] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.321474] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.321521] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.321568] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.321615] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.321672] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[8.321721] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.321768] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.321816] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::DetectorParameters>*}; _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.321867] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.321917] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.321970] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[8.322019] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.322073] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[8.322121] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.322169] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.322218] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::DetectorParameters>; T = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.322270] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:141:29:\x1b[m\x1b[K   required from here\n'}
[8.322333] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.322382] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[8.322430] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.322492] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.322542] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::DetectorParameters; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.322593] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[8.322643] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.322692] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.322742] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[8.322791] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.322841] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.322893] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[8.322943] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.322998] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::DetectorParameters>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.323051] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[8.323101] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[8.323152] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.323203] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[8.323258] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.323308] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::DetectorParameters>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::DetectorParameters>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.323361] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[8.323411] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.323461] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::DetectorParameters]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.323517] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[8.323568] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.323617] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[8.323667] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.323722] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.323772] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.323821] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.323871] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.323921] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.323972] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.324023] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.324075] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:67:\x1b[m\x1b[K   required from here\n'}
[8.324127] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::CharucoBoard>::shared_ptr(cv::Ptr<cv::aruco::Board>*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.324180] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;31m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.324231] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[8.324288] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.324340] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.324390] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.324443] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Alloc, class ... _Args> std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = _Alloc; _Args = {_Args ...}; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.324525] (SurfaceScanner) StderrLine: {'line': b'  408 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)\n'}
[8.324600] (-) TimerEvent: {}
[8.324685] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.324747] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:408:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.324803] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.324854] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.324905] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.324955] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.325006] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.325068] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.325134] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_alloc_shared_tag<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.325188] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.325240] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.325292] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.325343] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.325394] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.325465] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del, class> std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.325572] (SurfaceScanner) StderrLine: {'line': b'  340 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(unique_ptr<_Yp, _Del>&& __r)\n'}
[8.325645] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.325703] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:340:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.325792] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.325890] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.325953] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.326053] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.326112] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.326171] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.326231] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.326302] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.326366] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.326436] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.326489] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.326555] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.326615] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Up>&&) [with _Yp = _Tp1; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.326673] (SurfaceScanner) StderrLine: {'line': b'  332 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(auto_ptr<_Yp>&& __r);\n'}
[8.326734] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.326787] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:332:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.326840] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.326893] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.326945] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.326997] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.327049] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.327107] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.327160] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.327214] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.327267] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.327325] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.327412] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.327472] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.327529] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.327586] (SurfaceScanner) StderrLine: {'line': b'  325 |         explicit \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Yp>& __r)\n'}
[8.327639] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.327693] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:325:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.327768] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.327822] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.327875] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.327933] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.327984] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.328036] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.328088] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.328141] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.328193] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.328244] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.328300] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.328352] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.328405] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.328460] (SurfaceScanner) StderrLine: {'line': b'  313 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr<_Yp>&& __r) noexcept\n'}
[8.328511] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.328563] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:313:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.328619] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.328670] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.328722] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.328774] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.328825] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.328876] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.328928] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.328981] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.329033] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.329084] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.329135] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.329187] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.329239] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.329297] (SurfaceScanner) StderrLine: {'line': b'  296 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r) noexcept\n'}
[8.329349] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.329407] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:296:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.329469] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.329516] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.329562] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.329609] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.329664] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.329712] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.329760] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.329813] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.329861] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.329909] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.329969] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.330018] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.330068] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Yp>&, std::shared_ptr<_Tp>::element_type*) [with _Yp = _Yp; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.330118] (SurfaceScanner) StderrLine: {'line': b'  257 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[8.330166] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.330213] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:257:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.330260] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.330326] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.330375] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.330438] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.330490] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.330542] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.330600] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.330654] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.330707] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.330759] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.330811] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.330864] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.330920] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter, class _Alloc> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter, _Alloc) [with _Deleter = _Deleter; _Alloc = _Alloc; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.330976] (SurfaceScanner) StderrLine: {'line': b'  233 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d, _Alloc __a)\n'}
[8.331029] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.331082] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:233:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.331136] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.331189] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.331242] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.331295] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.331348] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.331401] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.331454] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[8.331516] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.331567] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.331614] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.331660] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.331706] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.331762] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class _Alloc, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter, _Alloc) [with _Yp = _Yp; _Deleter = _Deleter; _Alloc = _Alloc; <template-parameter-2-4> = <template-parameter-1-4>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.331813] (SurfaceScanner) StderrLine: {'line': b'  214 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d, _Alloc __a)\n'}
[8.331859] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.331905] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:214:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.331952] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.331999] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.332045] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.332095] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.332143] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.332189] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.332236] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 1 provided\n'}
[8.332284] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.332332] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.332379] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.332426] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.332489] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.332541] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Deleter> std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t, _Deleter) [with _Deleter = _Deleter; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.332593] (SurfaceScanner) StderrLine: {'line': b'  194 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t __p, _Deleter __d)\n'}
[8.332643] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.332693] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:194:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.332743] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.332797] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.332847] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.332896] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.332945] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.332994] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.333043] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.333092] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.333141] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.333191] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.333240] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.333290] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.333341] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Deleter, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = _Yp; _Deleter = _Deleter; <template-parameter-2-3> = <template-parameter-1-3>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.333400] (SurfaceScanner) StderrLine: {'line': b'  177 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p, _Deleter __d)\n'}
[8.333463] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.333511] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:177:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.333565] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd.hpp:81\x1b[m\x1b[K,\n'}
[8.333612] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/base.hpp:58\x1b[m\x1b[K,\n'}
[8.333660] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:53\x1b[m\x1b[K,\n'}
[8.333708] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[8.333755] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/cv_bridge/cv_bridge/cv_bridge.h:43\x1b[m\x1b[K,\n'}
[8.333803] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:3\x1b[m\x1b[K:\n'}
[8.333854] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:100:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.333902] (SurfaceScanner) StderrLine: {'line': b'  100 |     inline Ptr(const std::false_type&, Y* ptr) : std::shared_ptr<T>(ptr\x1b[01;36m\x1b[K)\x1b[m\x1b[K {}\n'}
[8.333953] (SurfaceScanner) StderrLine: {'line': b'      |                                                                        \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[8.334038] (SurfaceScanner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[8.334086] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.334134] (SurfaceScanner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/SurfaceScannerNode.cpp:1\x1b[m\x1b[K:\n'}
[8.334184] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<_Tp>::shared_ptr(_Yp*) [with _Yp = _Yp; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.334234] (SurfaceScanner) StderrLine: {'line': b'  160 |         \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(_Yp* __p) : __shared_ptr<_Tp>(__p) { }\n'}
[8.334289] (SurfaceScanner) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.334344] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:160:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.334393] (SurfaceScanner) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {cv::Ptr<cv::aruco::Board>*}; _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.334460] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:158:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.334525] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.334606] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:67:\x1b[m\x1b[K   required from here\n'}
[8.334659] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:125:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.334711] (SurfaceScanner) StderrLine: {'line': b'  125 |         using \x1b[01;31m\x1b[K_Constructible\x1b[m\x1b[K = typename enable_if<\n'}
[8.334763] (SurfaceScanner) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.334814] (SurfaceScanner) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(const false_type&, Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard; std::false_type = std::integral_constant<bool, false>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.334866] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/cvstd_wrapper.hpp:103:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<T>::Ptr(Y*) [with Y = cv::Ptr<cv::aruco::Board>; T = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.334917] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/peri/Desktop/Studium/ROS Robotik/SurfaceScanner_ws/src/SurfaceScanner/src/Scanner.hpp:146:67:\x1b[m\x1b[K   required from here\n'}
[8.334976] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::weak_ptr<_Tp>&, std::nothrow_t) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.335033] (SurfaceScanner) StderrLine: {'line': b'  417 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept\n'}
[8.335086] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.335136] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:417:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[8.335191] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr(std::nullptr_t) [with _Tp = cv::aruco::CharucoBoard; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.335244] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(nullptr_t) noexcept : shared_ptr() { }\n'}
[8.335298] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.335349] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:357:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.335400] (SurfaceScanner) StderrLine: {'line': b'  357 |       constexpr shared_ptr(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept : shared_ptr() { }\n'}
[8.335451] (SurfaceScanner) StderrLine: {'line': b'      |                            \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.335501] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.335552] (SurfaceScanner) StderrLine: {'line': b'  304 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(shared_ptr&& __r) noexcept\n'}
[8.335602] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.335651] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:304:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<cv::aruco::CharucoBoard>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.335703] (SurfaceScanner) StderrLine: {'line': b'  304 |       shared_ptr(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[8.335753] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[8.335803] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.335855] (SurfaceScanner) StderrLine: {'line': b'  150 |       \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr&) noexcept = default; ///< Copy constructor\n'}
[8.335907] (SurfaceScanner) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.335958] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:150:18:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kcv::Ptr<cv::aruco::Board>*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<cv::aruco::CharucoBoard>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.336014] (SurfaceScanner) StderrLine: {'line': b'  150 |       shared_ptr(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default; ///< Copy constructor\n'}
[8.336065] (SurfaceScanner) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.336116] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = cv::aruco::CharucoBoard]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.336167] (SurfaceScanner) StderrLine: {'line': b'  148 |       constexpr \x1b[01;36m\x1b[Kshared_ptr\x1b[m\x1b[K() noexcept : __shared_ptr<_Tp>() { }\n'}
[8.336218] (SurfaceScanner) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.336269] (SurfaceScanner) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[8.424723] (-) TimerEvent: {}
[8.524975] (-) TimerEvent: {}
[8.625237] (-) TimerEvent: {}
[8.725498] (-) TimerEvent: {}
[8.825818] (-) TimerEvent: {}
[8.926147] (-) TimerEvent: {}
[9.026392] (-) TimerEvent: {}
[9.126666] (-) TimerEvent: {}
[9.226940] (-) TimerEvent: {}
[9.327191] (-) TimerEvent: {}
[9.427510] (-) TimerEvent: {}
[9.527833] (-) TimerEvent: {}
[9.628161] (-) TimerEvent: {}
[9.728437] (-) TimerEvent: {}
[9.828706] (-) TimerEvent: {}
[9.837396] (SurfaceScanner) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/surface_scanner_node.dir/build.make:76: CMakeFiles/surface_scanner_node.dir/src/SurfaceScannerNode.cpp.o] Error 1\n'}
[9.837584] (SurfaceScanner) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/surface_scanner_node.dir/all] Error 2\n'}
[9.837801] (SurfaceScanner) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[9.839565] (SurfaceScanner) CommandEnded: {'returncode': 2}
[9.869250] (SurfaceScanner) JobEnded: {'identifier': 'SurfaceScanner', 'rc': 2}
[9.899311] (-) EventReactorShutdown: {}
